{"version":3,"sources":["images/roadracerlogo.png","images/mightychickenlogo.png","engine/Input.js","engine/MathTools.js","engine/Vector3.js","engine/Scene.js","engine/Time.js","engine/Physics.js","engine/Quaternion.js","engine/RigidBody.js","engine/Mesh.js","engine/SkinnedMesh.js","engine/Content.js","engine/GameObject.js","engine/Camera.js","engine/VehicleManager.js","engine/Vector2.js","engine/Gamepad.js","engine/Player.js","engine/Renderer.js","engine/PostProcessing.js","engine/Audio.js","engine/Vehicle.js","engine/InfoStationManager.js","engine/Light.js","engine/GameEngine.js","components/modal/RoadRacerModal.js","components/modal/MightyChickenModal.js","components/Game.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Input","this","keyDown","Map","keyPressed","key","set","toLowerCase","get","delete","has","clear","MathTools","v1","v2","Number","EPSILON","value","min","max","minVal","maxVal","from","to","deltaTime","Math","abs","PI","Vector3","x","y","z","sqrt","length","mag","magnitude","approximate","THREE","Ammo","btVector3","v","scalar","delta","Subtract","normalize","cp","Cross","angle","atan2","Dot","up","vec","SceneManager","scene","enabledObjects","disabledObjects","screenWidth","screenHeight","aspectRatio","obj","add","objID","enableObject","enableObjects","update","lateUpdate","render","width","height","color","near","far","fog","density","FOG_TYPE","LINEAR","EXPONENTIAL","Scene","Time","clock","Clock","getDelta","PhysicsEngine","collisionConfig","btDefaultCollisionConfiguration","dispatcher","btCollisionDispatcher","broadphase","btDbvtBroadphase","solver","btSequentialImpulseConstraintSolver","world","btDiscreteDynamicsWorld","setGravity","rigidBodies","body","addRigidBody","push","radius","shape","btSphereShape","setMargin","boxSize","btBoxShape","normal","btStaticPlaneShape","direction","btCapsuleShape","btCylinderShape","btConeShape","mesh","Promise","resolve","reject","vertsV3","indices","children","forEach","group","hasOwnProperty","index","geometry","array","verts","attributes","position","i","triMesh","btTriangleMesh","addTriangle","btBvhTriangleMeshShape","stepSimulation","PhysicShapes","SPHERE","BOX","PLANE","CAPSULE","CYLINDER","CONE","Physics","Quaternion","w","scale","Length","rad2Deg","asin","sourcePoint","destPoint","forwardVector","Normalize","dot","forward","Identity","rotAngle","acos","rotAxis","CreateFromAxisAngle","frwd","vector","vector2","vector3","m00","m01","m02","m10","m11","m12","m20","m21","m22","num8","quaternion","num","num7","num4","num6","num3","num5","num2","point","pivot","maxRot","LookRotation","dir","axis","halfAngle","s","sin","q","cos","yaw","deg2Rad","pitch","rollOver2","sinRollOver2","cosRollOver2","pitchOver2","sinPitchOver2","cosPitchOver2","yawOver2","sinYawOver2","cosYawOver2","result","q1","q2","t","SlerpUnclamped","RigidBody","rotation","mass","isKinematic","active","transform","btTransform","setIdentity","setOrigin","to_btVector3","setRotation","btQuaternion","motionState","btDefaultMotionState","localInertia","calculateLocalInertia","ri","btRigidBodyConstructionInfo","btRigidBody","setFriction","setActivationState","SetKinematic","setMassProps","getLocalInertia","setCollisionFlags","force","applyCentralForce","To_btVector3","applyForce","factor","setLinearFactor","linear","angular","setSleepingThresholds","torque","applyTorque","impulse","applyCentralImpulse","applyTorqueImpulse","applyImpulse","getCenterOfMassPosition","clearForces","quat","getOrientation","getLinearVelocity","getAngularVelocity","velocity","bodysetLinearVelocity","setAngularVelocity","translate","getWorldTransform","toBTV3","getMotionState","setWorldTransform","wantsSleeping","state","setMotionState","setAngularFactor","getAngularFactor","isInWorld","constraint","addConstraintRef","constriant","removeConstraintRef","flags","setFlags","getFlags","getCollisionShape","collider","setCollisionShape","setRollingFriction","getCollisionFlags","getOrigin","getRotation","setRestitution","Mesh","path","castShadow","receiveShadow","flatShading","mixer","action","meshData","LoadMesh","traverse","child","isMesh","GLTFLoader","load","gltf","material","doubleSided","undefined","error","console","SkinnedMesh","anim","currentAnimation","GameEngine","AddCallback","setShadows","loader","timeScale","skeleton","visible","animation","clip","findByName","stop","clipAction","play","Content","name","skinnedMesh","recieveShadow","log","model","meshes","then","data","catch","e","sounds","Object","freeze","GameObject","meshPath","zero","LoadModel","a","setPosition","isEnabled","texture","id","rigidBody","allowUpdate","addGameObject","disableObject","degrees","FromEuler","setQuaternion","btQauternion","euler","rot","Add","newPosition","pos","GetPosition","newScale","scaleVector","GetRotation","Euler","Animate","col","Camera","mainCamera","target","heigth","distance","fov","aspect","zNear","zFar","translateX","translateY","translateZ","LookAt","SetPosition","Rotate","VehicleManager","vehicles","distFromVehicle","isReady","ekey","rkey","inRangeVehicle","vehicleInUse","vehicle","player","inUse","vehiclePos","camPos","eKeyPos","lookAt","MultiplyScalar","isUpsideDown","closest","dist","Distance","findInRangeVehicle","updateEKey","updateRKey","Vector2","subtract","Gamepad","Buttons","BUTTON_BOTTOM","BUTTON_RIGHT","BUTTON_LEFT","BUTTON_TOP","BUMPER_LEFT","BUMPER_RIGHT","TRIGGER_LEFT","TRIGGER_RIGHT","BUTTON_CONTROL_LEFT","BUTTON_CONTROL_RIGHT","BUTTON_JOYSTICK_LEFT","BUTTON_JOYSTICK_RIGHT","D_PAD_UP","D_PAD_BOTTOM","D_PAD_LEFT","D_PAD_RIGHT","BUTTON_CONTROL_MIDDLE","buttonsDown","buttonsPressed","connected","Gamepads","start","leftAxis","rightAxis","addEventListener","gamepad","horizontalValue","verticalValue","addButton","removeButton","newAxis","deadzone","button","trigger","Player","moveSpeed","playAnimation","ePressed","isKeyPressed","isButtonPressed","useVehicle","leaveVehicle","zMove","xMove","isKeyDown","stick","leftStick","Equals","moveDir","changeAnimation","move","Angle","back","Renderer","renderer","canvas","loopCallback","alpha","antialias","precision","powerPreference","setSize","shadowMap","enabled","type","cullFace","outputEncoding","autoClear","setClearColor","clearAlpha","setAnimationLoop","camera","PostProcessing","composer","EffectComposer","renderPass","RenderPass","getScene","clearColor","addPass","bokeh","bloom","ffxa","fxaa","ShaderPass","FXAAShader","uniforms","BokehPass","focus","aperture","maxblur","UnrealBloomPass","Audio","listener","loop","volume","sound","buffer","setBuffer","setLoop","setVolume","setRefDistance","Vehicle","options","topSpeed","steeringRate","accelRate","breakForce","accelForceFront","accelForceBack","reverse","engineSound","tireSquealSound","enginePitch","centerOfMass","downForce","LoadSound","bodyModel","parrent","bodyShape","createBoxShape","bodyWidth","bodyHeight","bodyLength","tuning","btVehicleTuning","raycaster","btDefaultVehicleRaycaster","btRaycastVehicle","setCoordinateSystem","addAction","wheelModels","wheelLeftModel","wheelRightModel","wheelInfo","createWheel","frontLeftPos","frontRightPos","backRightPos","backLeftPos","currentAccelFront","currentAccelBack","currentBrakingFront","currentBrakingBack","steeringAngle","speed","addVehicle","front","wheelPos","wheelDir","wheelAxle","wheel","addWheel","suspensionLen","set_m_suspensionStiffness","stiffness","set_m_wheelsDampingRelaxation","damping","set_m_wheelsDampingCompression","compression","friction","frontFriction","backFriction","set_m_frictionSlip","set_m_rollInfluence","roll","isConnected","isPlaying","isButtonDown","moveTowards","clamp","panner","setPlaybackRate","setDetune","getNumWheels","updateWheelTransform","tm","getWheelTransformWS","p","vel","getRigidBody","applyEngineForce","setBrake","setSteeringValue","resetMovementWhenNotInUse","updateInput","updateSound","updateMovement","updateSteering","updateWheels","updateRigidBody","updateSpeed","InfoStationManager","infoStations","activationDistance","stationName","activate","openModal","closestDistance","clearKeys","Light","lightType","LightType","DIRECTIONAL","createDirectionalLight","POINT","SPOT","AMBIENT","createAmbientLight","light","intensity","shadow","mapSize","shadowMapWidth","shadowMapHeight","cameraNear","cameraFar","bias","shadowBias","top","shadowCameraSize","bottom","left","right","InitRenderer","init","Load","createCapsuleShape","ground","createPlaneShape","grass","moundSign","road","createMeshShape","parkinglot","infostation","infostationbase","mightychicken","mightychickensign","mightychickensignpost","addInfoStation","parkinglotcurb","garage","garagedoor","rrsign","mound","fenceleft","vehicle2","vehicle3","vehicle4","vehicle5","isModalOpen","clearButtons","Update","checkVehicleInRange","isUsingEffects","Render","fpsTime","fps","setExpoFog","ambientLight","requestAnimationFrame","props","isOpen","closeModal","styles","modal","display","flexDirection","image","backgroundImage","roadracerbanner","backgorundSize","backgroundPosition","backgroundRepeat","margin","promoText","fontFamily","contentText","linkSection","linkText","closeButton","marginTop","classes","makeStyles","theme","main","backgroundColor","border","boxShadow","shadows","padding","spacing","outline","useStyles","Modal","open","onClose","aria-labelledby","aria-describedby","style","className","href","rel","textDecoration","Button","onClick","mightychickenbanner","Game","isLoaded","setScreenSize","document","clientWidth","clientHeight","Configure","SetOpenModalCallback","ScreenResize","GetRenderer","clearInput","setState","currentModal","window","preventDefault","stopPropagation","addKey","removeKey","overflow","tabIndex","onKeyDown","HandleKeyPress","onKeyUp","HandleKeyUp","ref","c","onBlur","RoadRacerModal","MightyChickenModal","React","Component","App","Boolean","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.ecbf37c6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/roadracerlogo.bc79bb73.png\";","module.exports = __webpack_public_path__ + \"static/media/mightychickenlogo.58923630.png\";","class InputManager {\n    constructor() {\n        this.keyDown = new Map();\n        this.keyPressed = new Map();\n    }\n\n    addKey(key) {\n        this.keyDown.set(key.toLowerCase(), 1);\n        if (this.keyPressed.get(key.toLowerCase()) !== 2) {\n            this.keyPressed.set(key.toLowerCase(), 1);\n        }\n    }\n\n    removeKey(key) {\n        this.keyDown.delete(key.toLowerCase());\n        this.keyPressed.delete(key.toLowerCase());\n    }\n\n    isKeyDown(key) {\n        return this.keyDown.has(key.toLowerCase());\n    }\n\n    isKeyPressed(key) {\n\n        if (this.keyPressed.has(key.toLowerCase()) && this.keyPressed.get(key.toLowerCase()) === 1) {\n            this.keyPressed.set(key.toLowerCase(), 2);\n            return true;\n        }\n\n        return false;\n    }\n\n    clearKeys() {\n        this.keyDown.clear();\n        this.keyPressed.clear();\n    }\n}\n\nconst Input = new InputManager();\nexport default Input;","export default class MathTools {\n    static get rad2Deg() {\n        return 180.0 / Math.PI;\n    }\n\n    static get deg2Rad() {\n        return Math.PI / 180.0;\n    }\n\n    static approximate(v1, v2) {\n        if (v1 > v2 - Number.EPSILON && v1 < v2 + Number.EPSILON)\n            return true;\n\n        return false;\n    }\n\n    static clamp(value, min, max) {\n        let minVal = min;\n        let maxVal = max;\n\n        if (min > max) {\n            minVal = max;\n            maxVal = min;\n        }\n\n        if (value < minVal)\n            return minVal;\n\n        if (value > maxVal)\n            return maxVal;\n\n        return value;\n    }\n\n    static moveTowards(from, to, deltaTime) {\n\n        if (Math.abs(from - to) <= deltaTime) return from;\n\n        return from + ((to - from) * deltaTime);\n    }\n}","import * as THREE from \"three\";\nimport MathTools from './MathTools';\nimport Ammo from 'ammo.js';\n\nexport default class Vector3 {\n\n    constructor(x = 0.0, y = 0.0, z = 0.0) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n\n    length() {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    }\n\n    magnitude() {\n        return this.length();\n    }\n\n    normalize() {\n        let mag = this.magnitude();\n\n        if (MathTools.approximate(mag, 0.0)) {\n            this.x = 0.0;\n            this.y = 0.0;\n            this.z = 0.0;\n\n            return;\n        }\n\n        this.x /= mag;\n        this.y /= mag;\n        this.z /= mag;\n    }\n\n    negate() {\n        this.x *= -1.0;\n        this.y *= -1.0;\n        this.z *= -1.0;\n    }\n\n    to3jsV3() {\n        return new THREE.Vector3(this.x, this.y, this.z);\n    }\n\n    to_btVector3() {\n        return new Ammo.btVector3(this.x, this.y, this.z);\n    }\n\n    toString() {\n        return '( x: ' + this.x + '  y: ' + this.y + '  z: ' + this.z + ' )';\n    }\n\n    static get zero() { return new Vector3(0.0, 0.0, 0.0); }\n    static get one() { return new Vector3(1.0, 1.0, 1.0); }\n    static get up() { return new Vector3(0.0, 1.0, 0.0); }\n    static get down() { return new Vector3(0.0, -1.0, 0.0); }\n    static get forward() { return new Vector3(0.0, 0.0, -1.0); }\n    static get back() { return new Vector3(0.0, 0.0, 1.0); }\n    static get left() { return new Vector3(-1.0, 0.0, 0.0); }\n    static get right() { return new Vector3(1.0, 0.0, 0.0); }\n\n    static Add(v1, v2) {\n        let v = new Vector3(0.0, 0.0, 0.0);\n        v.x = v1.x + v2.x;\n        v.y = v1.y + v2.y;\n        v.z = v1.z + v2.z;\n\n        return v;\n    }\n\n    static Subtract(v1, v2) {\n        let v = new Vector3(0.0, 0.0, 0.0);\n        v.x = v1.x - v2.x;\n        v.y = v1.y - v2.y;\n        v.z = v1.z - v2.z;\n\n        return v;\n    }\n\n    static Multiply(v1, v2) {\n        let v = new Vector3(0.0, 0.0, 0.0);\n        v.x = v1.x * v2.x;\n        v.y = v1.y * v2.y;\n        v.z = v1.z * v2.z;\n\n        return v;\n    }\n\n\n    static AddScalar(v1, scalar) {\n        let v = new Vector3(0.0, 0.0, 0.0);\n        v.x = v1.x + scalar;\n        v.y = v1.y + scalar;\n        v.z = v1.z + scalar;\n\n        return v;\n    }\n\n    static SubtractScalar(v1, scalar) {\n        let v = new Vector3(0.0, 0.0, 0.0);\n        v.x = v1.x - scalar;\n        v.y = v1.y - scalar;\n        v.z = v1.z - scalar;\n\n        return v;\n    }\n\n    static MultiplyScalar(v1, scalar) {\n        let v = new Vector3(0.0, 0.0, 0.0);\n        v.x = v1.x * scalar;\n        v.y = v1.y * scalar;\n        v.z = v1.z * scalar;\n\n        return v;\n    }\n\n    static Cross(v1, v2) {\n        let v = new Vector3(0.0, 0.0, 0.0);\n\n        v.x = v1.y * v2.z - v1.z * v2.y;\n        v.y = v1.z * v2.x - v1.x * v2.z;\n        v.z = v1.x * v2.y - v1.y * v2.x;\n\n        return v;\n    }\n\n    static Distance(v1, v2) {\n        let delta = Vector3.Subtract(v2, v1);\n\n        let distance = Math.sqrt(delta.x * delta.x + delta.y * delta.y + delta.z * delta.z);\n\n        return distance;\n    }\n\n    static Dot(v1, v2) {\n        return v1.x * v2.x + v1.y * v2.y + v1.z * v2.z;\n    }\n\n    static Normalize(v1) {\n        v1.normalize();\n        return v1;\n    }\n\n    static Equals(v1, v2) {\n        return (v1.x > v2.x - Number.EPSILON && v1.x < v2.x + Number.EPSILON) &&\n            (v1.y > v2.y - Number.EPSILON && v1.y < v2.y + Number.EPSILON) &&\n            (v1.z > v2.z - Number.EPSILON && v1.z < v2.z + Number.EPSILON);\n    }\n\n    static Angle(v1, v2) {\n        let cp = Vector3.Cross(v1, v2);\n\n        let angle = Math.atan2(cp.length(), Vector3.Dot(v1, v2));\n\n        return Vector3.Dot(cp, Vector3.up) < 0 ? -angle : angle;\n    }\n\n    static Negate(v1) {\n        let vec = v1;\n        vec.x *= -1.0;\n        vec.y *= -1.0;\n        vec.z *= -1.0;\n\n        return vec;\n    }\n\n    static toBTV3(v) {\n        return new Ammo.btVector3(v.x, v.y, v.z);\n    }\n\n    static toJSV3(v) {\n        return new THREE.Vector3(v.x, v.y, v.z);\n    }\n}","import * as THREE from \"three\";\n\nclass SceneManager {\n\n    static FOG_TYPE = {\n        LINEAR: 0,\n        EXPONENTIAL: 1,\n    };\n\n    constructor() {\n        this.scene = new THREE.Scene();\n        this.enabledObjects = {};\n        this.disabledObjects = {};\n        this.screenWidth = 1024;\n        this.screenHeight = 600;\n        this.aspectRatio = 1024 / 600;\n    }\n\n    add(obj) {\n        this.scene.add(obj);\n    }\n\n    addGameObject(obj) {\n\n        if (obj.objID in this.disabledObjects)\n            this.enableObject(obj);\n        else\n            if (!(obj.objID in this.enableObject))\n                this.enabledObjects[obj.objID] = obj;\n    }\n\n    getScene() {\n        return this.scene;\n    }\n\n    enableObject(obj) {\n        if (obj.objID in this.disabledObjects) {\n            this.enabledObjects[obj.objID] = obj;\n            delete this.disabledObjects[obj.objID];\n        }\n    }\n\n    disableObject(obj) {\n        if (obj.objID in this.enableObjects) {\n            this.disabledObjects[obj.objID] = obj;\n            delete this.enabledObjects[obj.objID];\n        }\n    }\n\n    update() {\n\n        for (let obj in this.enabledObjects) {\n            this.enabledObjects[obj].update();\n        }\n\n        for (let obj in this.enabledObjects) {\n            this.enabledObjects[obj].lateUpdate();\n        }\n\n        for (let obj in this.enabledObjects) {\n            this.enabledObjects[obj].render();\n        }\n    }\n\n    setScreenSize(width, height) {\n        this.screenWidth = width;\n        this.screenHeight = height;\n\n        this.aspectRatio = width / height;\n    }\n\n    setLinearFog(color, near, far) {\n        this.scene.fog = new THREE.Fog(color, near, far);\n    }\n\n    setExpoFog(color, density) {\n        this.scene.fog = new THREE.FogExp2(color, density);\n    }\n}\n\nconst Scene = new SceneManager();\n\nexport default Scene;","import { Clock } from \"three\";\n\nclass TimeManager{\n \n    constructor(){\n        this.clock = new Clock(true);\n        this.deltaTime = 0;\n    }\n\n    Update(){\n        this.deltaTime = this.clock.getDelta();  \n    }\n\n    DeltaTime(){\n        return this.deltaTime;\n    }\n}\n\nconst Time = new TimeManager();\nexport default Time;","import Time from './Time';\nimport Ammo from 'ammo.js';\n\nclass PhysicsEngine {\n\n    static PhysicShapes = {\n        SPHERE: 0,\n        BOX: 1,\n        PLANE: 2,\n        CAPSULE: 3,\n        CYLINDER: 4,\n        CONE: 5,\n    };\n\n    constructor() {\n        this.collisionConfig = new Ammo.btDefaultCollisionConfiguration();\n        this.dispatcher = new Ammo.btCollisionDispatcher(this.collisionConfig);\n        this.broadphase = new Ammo.btDbvtBroadphase();\n        this.solver = new Ammo.btSequentialImpulseConstraintSolver();\n        this.world = new Ammo.btDiscreteDynamicsWorld(this.dispatcher, this.broadphase, this.solver, this.collisionConfig);\n\n        this.world.setGravity(new Ammo.btVector3(0, -9.8, 0));\n\n        this.rigidBodies = [];\n    }\n\n    setGravity(v) {\n        this.world.setGravity(new Ammo.btVector3(v.x, v.y, v.z));\n    }\n\n    addRigidBody(body) {\n\n        if (body === null) return;\n\n        this.world.addRigidBody(body);\n        this.rigidBodies.push(body);\n\n        return this.rigidBodies[this.rigidBodies.length - 1];\n    }\n\n    createSphereShape(radius = 1) {\n        let shape = new Ammo.btSphereShape(radius);\n        shape.setMargin(0.05);\n\n        return shape;\n    }\n\n    createBoxShape(boxSize) {\n        let shape = new Ammo.btBoxShape(new Ammo.btVector3(boxSize.x * 0.5, boxSize.y * 0.5, boxSize.z * 0.5));\n        shape.setMargin(0.05);\n\n        return shape;\n    }\n\n    createPlaneShape(normal) {\n        let shape = new Ammo.btStaticPlaneShape(new Ammo.btVector3(normal.x, normal.y, normal.z), 0.0001);\n\n        return shape;\n    }\n\n    createCapsuleShape(radius, height, direction) {\n        let shape = new Ammo.btCapsuleShape(radius, height, new Ammo.btVector3(direction.x, direction.y, direction.z));\n        shape.setMargin(0.05);\n\n        return shape;\n    }\n\n    createCylinderShape(radius, height, direction) {\n        let shape = new Ammo.btCylinderShape(radius, height, new Ammo.btVector3(direction.x, direction.y, direction.z));\n        shape.setMargin(0.05);\n\n        return shape;\n    }\n\n    createConeShape(radius, height, direction) {\n        let shape = new Ammo.btConeShape(radius, height, new Ammo.btVector3(direction.x, direction.y, direction.z));\n        shape.setMargin(0.05);\n\n        return shape;\n    }\n\n    createMeshShape(mesh) {\n        return new Promise((resolve, reject) => {\n\n            let vertsV3 = [];\n            let indices = [];\n\n            mesh.children.forEach(group => {\n                if (group.hasOwnProperty('children') && group.children.length > 0) {\n                    group.children.forEach(mesh => {\n                        if (mesh.hasOwnProperty('geometry')) {\n                            let index = mesh.geometry.index.array;\n                            let verts = mesh.geometry.attributes.position.array;\n                            // This code wont work.  Will create a garbage collision mesh.\n                            for (let i = 0; i < index.length; i += 3) {\n                                indices.push(index[i]);\n                            }\n\n                            for (let i = 0; i < verts.length; i += 3) {\n                                vertsV3.push(new Ammo.btVector3(verts[i], verts[i + 1], verts[i + 2]));\n                            }\n                        }\n                    });\n                }\n                else\n                    if (group.hasOwnProperty('geometry')) {\n                        indices = group.geometry.index.array;\n                        let verts = group.geometry.attributes.position.array;\n\n                        for (let i = 0; i < verts.length; i += 3) {\n                            vertsV3.push(new Ammo.btVector3(verts[i], verts[i + 1], verts[i + 2]));\n                        }\n                    }\n            });\n\n            let triMesh = new Ammo.btTriangleMesh();\n\n            for (let i = 0; i < indices.length; i += 3) {\n\n                triMesh.addTriangle(vertsV3[indices[i]], vertsV3[indices[i + 1]], vertsV3[indices[i + 2]]);\n            }\n\n            const shape = new Ammo.btBvhTriangleMeshShape(triMesh, true);\n\n            resolve(shape);\n        });\n    }\n\n    update() {\n        this.world.stepSimulation(Time.deltaTime, 30, 1.0 / 60.0);\n    }\n}\n\nconst Physics = new PhysicsEngine();\nexport default Physics;","import Vector3 from './Vector3';\nimport MathTools from './MathTools';\n\nexport default class Quaternion {\n\n    constructor(x = 0.0, y = 0.0, z = 0.0, w = 1.0) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.w = w;\n    }\n\n    Normalize() {\n        const scale = 1.0 / this.Length();\n        this.x *= scale;\n        this.y *= scale;\n        this.z *= scale;\n        this.w *= scale;\n    }\n\n    Inverse() {\n        return new Quaternion(this.x, this.y, this.z, -this.w);\n    }\n\n    Negate() {\n        return new Quaternion(-this.x, -this.y, -this.z, this.w);\n    }\n\n    Euler() {\n        let v = new Vector3();\n\n        v.y = Math.atan2(2.0 * this.w * this.y + 2.0 * this.z * this.x, 1.0 - 2.0 * (this.x * this.x + this.y * this.y)) * MathTools.rad2Deg;\n        v.x = Math.asin(2.0 * (this.w * this.x - this.y * this.z)) * MathTools.rad2Deg;\n        v.z = Math.atan2(2.0 * this.w * this.z + 2.0 * this.x * this.y, 1.0 - 2.0 * (this.z * this.z + this.x * this.x)) * MathTools.rad2Deg;\n\n        return v;\n    }\n\n    Length() {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n    }\n\n    LengthSquared() {\n        return (this.x * this.x + this.y * this.y + this.z * this.z) + this.w * this.w;\n    }\n\n    static LookAt(sourcePoint, destPoint, up) {\n        let forwardVector = Vector3.Normalize(Vector3.Subtract(destPoint, sourcePoint));\n\n        let dot = Vector3.Dot(Vector3.forward, forwardVector);\n\n        if (Math.abs(dot - (-1.0)) < 0.000001) {\n            return new Quaternion(Vector3.up.x, Vector3.up.y, Vector3.up.z, Math.PI);\n        }\n        if (Math.abs(dot - (1.0)) < 0.000001) {\n            return Quaternion.Identity();\n        }\n\n        let rotAngle = Math.acos(dot);\n        let rotAxis = Vector3.Cross(forwardVector, up);\n        rotAxis = Vector3.Normalize(rotAxis);\n        return Quaternion.CreateFromAxisAngle(rotAxis, rotAngle);\n    }\n\n    static LookRotation(forward, up) {\n        let frwd = Vector3.Normalize(forward);\n\n        let vector = Vector3.Normalize(frwd);\n        let vector2 = Vector3.Normalize(Vector3.Cross(up, vector));\n        let vector3 = Vector3.Cross(vector, vector2);\n\n        let m00 = vector2.x;\n        let m01 = vector2.y;\n        let m02 = vector2.z;\n        let m10 = vector3.x;\n        let m11 = vector3.y;\n        let m12 = vector3.z;\n        let m20 = vector.x;\n        let m21 = vector.y;\n        let m22 = vector.z;\n\n        let num8 = (m00 + m11) + m22;\n        let quaternion = new Quaternion();\n\n        if (num8 > 0.0) {\n            let num = Math.sqrt(num8 + 1.0);\n\n            quaternion.w = num * 0.5;\n            num = 0.5 / num;\n            quaternion.x = (m12 - m21) * num;\n            quaternion.y = (m20 - m02) * num;\n            quaternion.z = (m01 - m10) * num;\n\n            return quaternion;\n        }\n        if ((m00 >= m11) && (m00 >= m22)) {\n            let num7 = Math.sqrt(((1.0 + m00) - m11) - m22);\n            let num4 = 0.5 / num7;\n\n            quaternion.x = 0.5 * num7;\n            quaternion.y = (m01 + m10) * num4;\n            quaternion.z = (m02 + m20) * num4;\n            quaternion.w = (m12 - m21) * num4;\n\n            return quaternion;\n        }\n        if (m11 > m22) {\n            let num6 = Math.sqrt(((1.0 + m11) - m00) - m22);\n            let num3 = 0.5 / num6;\n\n            quaternion.x = (m10 + m01) * num3;\n            quaternion.y = 0.5 * num6;\n            quaternion.z = (m21 + m12) * num3;\n            quaternion.w = (m20 - m02) * num3;\n\n            return quaternion;\n        }\n        let num5 = Math.sqrt(((1.0 + m22) - m00) - m11);\n        let num2 = 0.5 / num5;\n\n        quaternion.x = (m20 + m02) * num2;\n        quaternion.y = (m21 + m12) * num2;\n        quaternion.z = 0.5 * num5;\n        quaternion.w = (m01 - m10) * num2;\n\n        return quaternion;\n    }\n\n    static RotatePointAroundPivot(point, pivot, maxRot) {\n        return Quaternion.LookRotation(Vector3.Subtract(point, pivot), Vector3.up) * point;\n    }\n\n    static RotateAround(point, pivot) {\n        let dir = point - pivot;\n        dir = Quaternion.LookRotation(dir, Vector3.up) * dir;\n\n        return dir + pivot;\n    }\n\n    static CreateFromAxisAngle(axis, angle) {\n        let halfAngle = angle * 0.5;\n        let s = Math.sin(halfAngle);\n        let q = new Quaternion();\n        q.x = axis.x * s;\n        q.y = axis.y * s;\n        q.z = axis.z * s;\n        q.w = Math.cos(halfAngle);\n        return q;\n    }\n\n    static FromEuler(x, y, z) {\n        let yaw = y * MathTools.deg2Rad;\n        let pitch = x * MathTools.deg2Rad;\n        let roll = z * MathTools.deg2Rad;\n\n        let rollOver2 = roll * 0.5;\n        let sinRollOver2 = Math.sin(rollOver2);\n        let cosRollOver2 = Math.cos(rollOver2);\n        let pitchOver2 = pitch * 0.5;\n        let sinPitchOver2 = Math.sin(pitchOver2);\n        let cosPitchOver2 = Math.cos(pitchOver2);\n        let yawOver2 = yaw * 0.5;\n        let sinYawOver2 = Math.sin(yawOver2);\n        let cosYawOver2 = Math.cos(yawOver2);\n        let result = new Quaternion();\n        result.w = cosYawOver2 * cosPitchOver2 * cosRollOver2 + sinYawOver2 * sinPitchOver2 * sinRollOver2;\n        result.x = cosYawOver2 * sinPitchOver2 * cosRollOver2 + sinYawOver2 * cosPitchOver2 * sinRollOver2;\n        result.y = sinYawOver2 * cosPitchOver2 * cosRollOver2 - cosYawOver2 * sinPitchOver2 * sinRollOver2;\n        result.z = cosYawOver2 * cosPitchOver2 * sinRollOver2 - sinYawOver2 * sinPitchOver2 * cosRollOver2;\n\n        return result;\n    }\n\n    static Dot(q1, q2) {\n        return q1.x * q2.x + q1.y * q2.y + q1.z * q2.z + q1.w * q2.w;\n    }\n\n    static Slerp(from, to, t) {\n        return Quaternion.SlerpUnclamped(from, to, t);\n    }\n\n    static Normalize(q) {\n        let q1 = q;\n        let scale = 1.0 / q1.Length();\n        q1.x *= scale;\n        q1.y *= scale;\n        q1.z *= scale;\n        q1.w *= scale;\n\n        return q1;\n    }\n\n    static Identity() {\n        return new Quaternion(0.0, 0.0, 0.0, 1.0);\n    }\n}","\nimport Physics from './Physics';\nimport Quaternion from './Quaternion';\nimport Vector3 from './Vector3';\nimport Ammo from 'ammo.js';\n\nexport default class RigidBody {\n\n    constructor(position = new Vector3(0, 0, 0), shape,  rotation = Quaternion.Identity(), mass = 1) {\n\n        this.isKinematic = false;\n        this.active = true;\n        this.mass = mass;\n        this.transform = new Ammo.btTransform();\n        this.transform.setIdentity();\n        this.transform.setOrigin(position.to_btVector3());\n        this.transform.setRotation(new Ammo.btQuaternion(rotation.x, rotation.y, rotation.z, rotation.w));\n        this.motionState = new Ammo.btDefaultMotionState(this.transform);\n\t\t\t\n        let localInertia = new Vector3(0.0, 0.0, 0.0);\n\n        if (mass > 0)\n            shape.calculateLocalInertia(this.mass, localInertia.to_btVector3());\n\n        let ri =new Ammo.btRigidBodyConstructionInfo(this.mass, this.motionState, shape, localInertia.to_btVector3());\n        this.body = new Ammo.btRigidBody(ri);\n   \n        this.body.setFriction(1);\n        this.body.setActivationState(4);\n\n        this.SetKinematic(mass === 0);\n        \n        Physics.addRigidBody(this.body);\n    }\n\n    setMass(mass) {\n        this.mass = mass;\n        this.body.setMassProps(mass, this.body.getLocalInertia());\n    }\n\n    SetKinematic(value) {\n        this.isKinematic = value;\n\n        if (value) {\n            this.body.setMassProps(0.0, new Ammo.btVector3(0.0, 0.0, 0.0));\n            this.body.setCollisionFlags(2);\n            this.body.setActivationState(4);\n        }\n        else {\n            this.body.setMassProps(this.mass, new Ammo.btVector3(0.0, 0.0, 0.0));\n            this.body.setCollisionFlags(0);\n            this.body.setActivationState(1);\n        }\n    }\n\n    AddForce(force) {\n        this.body.applyCentralForce(force.To_btVector3());\n    }\n\n    AddForceAt(force, position) {\n        this.body.applyForce(force.To_btVector3(), position.To_btVector3());\n    }\n\n    SetLinearFactor(factor) {\n        this.body.setLinearFactor(factor.To_btVector3());\n    }\n\n    SetSleepingThreshold(linear, angular) {\n        this.body.setSleepingThresholds(linear, angular);\n    }\n\n    ApplyTorque(torque) {\n        this.body.applyTorque(torque.To_btVector3());\n    }\n\n    ApplyCentralImpulse(impulse) {\n        this.body.applyCentralImpulse(impulse.To_btVector3());\n    }\n\n    ApplyTorqueImpulse(impulse) {\n        this.body.applyTorqueImpulse(impulse.To_btVector3());\n    }\n\n    ApplyImpulse(impulse) {\n        this.body.applyImpulse(impulse.To_btVector3(), this.body.getCenterOfMassPosition());\n    }\n\n    ApplyImpulseAt(impulse, position) {\n        this.body.applyImpulse(impulse.To_btVector3(), position.To_btVector3());\n    }\n\n    ClearForces() {\n        this.body.clearForces();\n    }\n\n    GetOrentation() {\n        let quat = this.body.getOrientation();\n\n        return new Quaternion(quat.x(), quat.y(), quat.z(), quat.w());\n    }\n\n    GetLinearVelocity() {\n        let v = this.body.getLinearVelocity();\n\n        return new Vector3(v.x(), v.y(), v.z());\n    }\n\n    GetAngularVelocity() {\n        let v = this.body.getAngularVelocity();\n\n        return new Vector3(v.x(), v.y(), v.z());\n    }\n\n    SetLinearVelocity(velocity) {\n        this.bodysetLinearVelocity(velocity.To_btVector3());\n    }\n\n    setAngularVelocity(velocity) {\n        this.body.setAngularVelocity(velocity.To_btVector3());\n    }\n\n    translate(position) {\n        this.body.translate(position.To_btVector3());\n    }\n\n    setPosition(position) {\n        this.body.getWorldTransform().setOrigin(Vector3.toBTV3(position));\n    }\n\n    Move(position) {\n        this.body.translate(position.To_btVector3());\n    }\n\n    setRotation(rotation) {\n        let quat = new Ammo.btQuaternion(rotation.x, rotation.y, rotation.z, rotation.w);\n        this.body.getWorldTransform().setRotation(quat);\n        this.body.getMotionState().setWorldTransform(this.body.getWorldTransform());\n    }\n\n    setQuaternion(quat){\n        this.body.getWorldTransform().setRotation(quat);\n        this.body.getMotionState().setWorldTransform(this.body.getWorldTransform());\n    }\n\n    WantsSleep() {\n        return this.body.wantsSleeping();\n    }\n\n    GetMotionState() {\n        return this.body.getMotionState();\n    }\n\n    SetMotionState(state) {\n        this.body.setMotionState(state);\n    }\n\n    SetAngularFactor(factor) {\n        this.body.setAngularFactor(factor.To_btVector3());\n    }\n\n    GetAngularFactor() {\n        let v = this.body.getAngularFactor();\n        return new Vector3(v.x(), v.y(), v.z());\n    }\n\n    IsInWorld() {\n        return this.body.isInWorld();\n    }\n\n    AddContraint(constraint) {\n        this.addConstraintRef(constraint);\n    }\n\n    RemoveContraint(constriant) {\n        this.removeConstraintRef(constriant);\n    }\n\n    SetFlags(flags) {\n        this.setFlags(flags);\n    }\n\n    GetFlags() {\n        return this.getFlags();\n    }\n\n    GetLocalInertia() {\n        let v = this.body.getLocalInertia()\n        return new Vector3(v.x(), v.y(), v.z());\n    }\n\n    IsActive() {\n        return this.active;\n    }\n\n    GetCollisionShape() {\n        return this.body.getCollisionShape();\n    }\n\n    SetCollisionShape(collider) {\n        this.body.setCollisionShape(collider);\n        this.body.setRollingFriction(0.3);\n    }\n\n    GetCollisionFlags() {\n        return this.body.getCollisionFlags();\n    }\n\n    SetCollisionFlags(flags) {\n        this.body.setCollisionFlags(flags);\n    }\n\n    GetPosition() {\n        let v = this.body.getWorldTransform().getOrigin();\n        \n        return new Vector3(v.x(), v.y(), v.z());\n    }\n\n    GetRotation() {\n        let quat = this.body.getWorldTransform().getRotation();\n \n        return new Quaternion(quat.x(), quat.y(), quat.z(), quat.w());;\n    }\n\n    SetActivationState(state) {\n        this.body.setActivationState(state);\n    }\n\n    SetBounciness(value) {\n        this.body.setRestitution(value);\n    }\n\n    IsKinematic() {\n        return this.isKinematic;\n    }\n\n    SetFriction(value) {\n        this.body.setFriction(value);\n    }\n}","import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport Scene from './Scene';\n\nexport default class Mesh {\n    constructor(path = null, castShadow = false, receiveShadow = false, flatShading = false) {\n        this.mixer = null;\n        this.action = null;\n        this.meshData = null;\n        this.mesh = null;\n        this.scene = null;\n        this.castShadow = castShadow;\n        this.receiveShadow = receiveShadow;\n        this.flatShading = flatShading;\n        if (path !== null)\n            this.LoadMesh(path);\n    }\n\n    setShadows() {\n\n        this.scene.traverse(child => {\n            if (child.isMesh) {\n                child.castShadow = this.castShadow;\n                child.receiveShadow = this.receiveShadow;\n            }\n        });\n    }\n\n    castShadow(value) {\n        this.castShadow = value;\n    }\n\n    receiveShadow(value) {\n        this.receiveShadow = value;\n    }\n\n    LoadMesh(path) {\n        return new Promise((resolve, reject) => {\n            let loader = new GLTFLoader();\n            loader.load(path, (gltf) => {\n\n                gltf.scene.traverse(child => {\n                    if (child.isMesh) {\n                        child.castShadow = this.castShadow;\n                        child.receiveShadow = this.receiveShadow;\n                        if (this.flatShading)\n                            child.material.flatShading = this.flatShading;\n                    }\n                });\n\n                this.scene = gltf.scene;\n                this.meshData = gltf.scene.children;\n                this.mesh = gltf.scene;\n                this.mesh.doubleSided = false;\n                Scene.add(gltf.scene);\n\n                resolve(this);\n\n            }, undefined, function (error) {\n                console.error(error);\n                reject('error');\n            });\n        });\n\n    }\n}\n","import * as THREE from \"three\";\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport Scene from './Scene';\nimport Time from './Time';\nimport GameEngine from \"./GameEngine\";\n\nexport default class SkinnedMesh {\n\n    constructor(path, castShadow = false, receiveShadow = false, flatShading = false) {\n        this.mixer = null;\n        this.action = null;\n        this.meshData = null;\n        this.mesh = null;\n        this.anim = null;\n        this.scene = null;\n        this.currentAnimation = '';\n        this.castShadow = castShadow;\n        this.receiveShadow = receiveShadow;\n        this.LoadMesh(path, flatShading);\n    }\n\n    setShadows() {\n        this.scene.traverse(child => {\n            if (child.isMesh) {\n                child.castShadow = this.castShadow;\n                child.receiveShadow = this.receiveShadow;\n            }\n        });\n    }\n\n    castShadow(value) {\n        this.castShadow = value;\n        GameEngine.AddCallback(this.setShadows(value));\n\n    }\n\n    receiveShadow(value) {\n        this.receiveShadow = value;\n        GameEngine.AddCallback(this.setShadows(value));\n    }\n\n    async LoadMesh(path, flatShading = false) {\n\n        let loader = new GLTFLoader();\n\n        await loader.load(path, (gltf) => {\n            this.meshData = new THREE.SkinnedMesh(gltf);\n\n            this.mixer = new THREE.AnimationMixer(gltf.scene);\n            this.mixer.timeScale = 1;\n\n            let skeleton = new THREE.SkeletonHelper(gltf.scene);\n            skeleton.visible = false;\n            Scene.add(skeleton);\n\n            gltf.scene.traverse(child => {\n\n                if (child.isMesh) {\n\n                    child.castShadow = this.castShadow;\n                    child.receiveShadow = this.receiveShadow;\n\n                    if (flatShading)\n                        child.material.flatShading = flatShading;\n                }\n            });\n\n            this.scene = gltf.scene;\n            this.meshData = gltf.scene.children;\n            this.mesh = gltf.scene;\n            this.anim = gltf;\n\n            Scene.add(gltf.scene);\n\n        }, undefined, function (error) {\n            console.error(error);\n        });\n    }\n\n    playAnimation(animation) {\n\n        if (this.meshData === null)\n            return;\n\n        if (this.currentAnimation !== animation) {\n            this.currentAnimation = animation;\n            let clip = THREE.AnimationClip.findByName(this.anim, animation);\n\n            if (this.action !== null)\n                this.action.stop();\n\n            this.action = this.mixer.clipAction(clip);\n\n            if (this.action !== null)\n                this.action.play();\n        }\n    }\n\n    Animate() {\n\n        if (this.mixer !== null) {\n            this.mixer.update(Time.deltaTime);\n\n        }\n    }\n}\n","import Mesh from './Mesh';\nimport SkinnedMesh from './SkinnedMesh';\n\nclass ContentManager {\n    constructor() {\n        this.meshes = {};\n        this.sounds = {};\n    }\n\n    LoadMesh = (name = null, path = null, skinnedMesh = false, castShadow = false, recieveShadow = false, flatShading = false) => {\n        if (name === null) console.log('LoadMesh requires name');\n        if (path === null) console.log('LoadMesh requires a path');\n\n        return new Promise((resolve, reject) => {\n\n            if (skinnedMesh) {\n                let model = new SkinnedMesh(path, castShadow, recieveShadow, flatShading);\n                this.meshes[name] = model;\n                resolve(model);\n            }\n            else {\n                let model = new Mesh(null, castShadow, recieveShadow, flatShading);\n                model.LoadMesh(path)\n                    .then(data => {\n                        this.meshes[name] = model;\n                        resolve(model);\n                    })\n                    .catch(e => {\n                        reject(e);\n                    });\n            }\n        });\n    }\n}\n\nconst Content = new ContentManager();\nObject.freeze(Content);\nexport default Content;","import Vector3 from './Vector3';\nimport Scene from './Scene';\nimport RigidBody from './RigidBody';\nimport Quaternion from './Quaternion';\nimport Content from './Content';\nimport Ammo from 'ammo.js';\n\nexport default class GameObject {\n\n    static id = 0;\n\n    constructor(name = null, meshPath = null, skinnedMesh = false, castShadow = false, recieveShadow = false, flatShading = false, position = Vector3.zero, rotation = Quaternion.Identity()) {\n        this.position = position;\n        this.rotation = rotation;\n        this.scale = new Vector3(0.0, 0.0, 0.0);\n        this.isEnabled = true;\n        this.texture = null;\n        this.model = null;\n        this.skinnedMesh = skinnedMesh;\n        this.forward = Vector3.forward;\n        this.objID = GameObject.id;\n        this.rigidBody = null;\n        this.castShadow = castShadow;\n        this.recieveShadow = recieveShadow;\n        this.allowUpdate = true;\n        this.name = name;\n        GameObject.id++;\n\n        this.LoadModel(name, meshPath, flatShading);\n        Scene.addGameObject(this);\n    }\n\n    LoadModel = async (name, meshPath, flatShading = false) => {\n\n        if (meshPath === null) return;\n\n        await Content.LoadMesh(name, meshPath, this.skinnedMesh, this.castShadow, this.recieveShadow, flatShading)\n            .then(model => {\n                this.model = model;\n\n                this.setPosition(this.position);\n                this.setRotation(this.rotation);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    setEnabled(value) {\n        this.isEnabled = value;\n\n        if (this.isEnabled)\n            Scene.enableObject(this);\n        else\n            Scene.disableObject(this);\n    }\n\n    setRotation(degrees) {\n        this.rotation = Quaternion.FromEuler(degrees.x, degrees.y, degrees.z);\n\n        if (this.rigidBody !== null)\n            this.rigidBody.setRotation(this.rotation);\n    }\n\n    setQuaternion(quat) {\n        this.rotation = quat;\n\n        if (this.rigidBody !== null)\n            this.rigidBody.setQuaternion(new Ammo.btQauternion(quat.x, quat.y, quat.z, quat.w));\n    }\n\n    rotate(degrees) {\n        if (this.rigidBody !== null) {\n            const euler = Vector3.zero;\n            this.rigidBody.setRotation(euler);\n            const rot = Vector3.Add(degrees, new Vector3(euler.x, euler.y, euler.z));\n            this.rotation = Quaternion.FromEuler(rot.x, rot.y, rot.z);\n            this.rigidBody.setRotation(this.rotation);\n        }\n        else\n            this.rotation = Vector3.Add(this.rotation, degrees);\n    }\n\n    setPosition(newPosition) {\n        this.position = newPosition;\n\n        if (this.rigidBody !== null)\n            this.rigidBody.setPosition(this.position);\n    }\n\n    move(pos) {\n\n        if (this.rigidBody !== null) {\n            this.position = this.rigidBody.GetPosition();\n            this.position = Vector3.Add(this.position, pos);\n            this.rigidBody.setPosition(new Vector3(this.position.x, this.position.y, this.position.z));\n        }\n        else {\n            this.position = Vector3.Add(this.position, pos);\n        }\n    }\n\n    setScale(newScale) {\n        this.scale = newScale;\n    }\n\n    changeScale(scaleVector) {\n        this.scale.x += scaleVector.x;\n        this.scale.y += scaleVector.y;\n        this.scale.z += scaleVector.z;\n    }\n\n    update() {\n\n        if (!this.allowUpdate) return;\n\n        if (this.rigidBody !== null) {\n            this.position = this.rigidBody.GetPosition();\n            this.rotation = this.rigidBody.GetRotation();\n        }\n\n        if ((this.model === null || !this.model.hasOwnProperty('mesh')))\n            return;\n\n        if (this.model.mesh === null)\n            return;\n\n        const rot = this.rotation.Euler();\n\n        this.model.mesh.position.set(this.position.x, this.position.y, this.position.z);\n        this.model.mesh.rotation.set(rot.x, rot.y, rot.z);\n    }\n\n    lateUpdate() { }\n\n    addRigidBody(mass = 1, shape = null, position = Vector3.zero, rotation = Quaternion.Identity()) {\n        this.rigidBody = new RigidBody(position, shape, rotation, mass);\n    }\n\n    render() {\n        if (this.skinnedMesh && this.model)\n            this.model.Animate();\n    }\n\n    collision(col) {\n        //console.log(col);\n    }\n}","import * as THREE from \"three\";\nimport Quaternion from \"./Quaternion\";\nimport Scene from \"./Scene\";\nimport GameObject from './GameObject';\nimport Vector3 from './Vector3';\n\nclass CameraManager extends GameObject {\n    constructor() {\n        super();\n        this.mainCamera = new THREE.PerspectiveCamera(60, 1024 / 600, 0.1, 1000);\n        this.target = null;\n        this.heigth = 3.0;\n        this.distance = 5.0;\n        this.position = Vector3.zero;\n\n        Scene.addGameObject(this);\n    }\n\n    Configure(fov, aspect, zNear, zFar) {\n        this.mainCamera = new THREE.PerspectiveCamera(fov, aspect, zNear, zFar);\n    }\n\n    Move(pos) {\n        this.mainCamera.translateX(pos.x);\n        this.mainCamera.translateY(pos.y);\n        this.mainCamera.translateZ(pos.z);\n    }\n\n    Rotate(rot) {\n        this.mainCamera.rotation.set(rot.x, rot.y, rot.z);\n    }\n\n    SetPosition(pos) {\n        this.mainCamera.position.set(pos.x, pos.y, pos.z);\n    }\n\n    GetCamera() {\n        return this.mainCamera;\n    }\n\n    lateUpdate() {\n\n        if (this.target === null) return;\n\n        this.position = Vector3.Add(this.target.position, new Vector3(0.0, this.heigth, this.distance));\n        this.rotation = Quaternion.LookAt(this.position, this.target.position, Vector3.up);\n\n        this.SetPosition(this.position);\n\n        const rot = this.rotation.Euler();\n\n        this.Rotate(rot);\n    }\n}\n\nconst Camera = new CameraManager();\n\nexport default Camera;","import Vector3 from './Vector3';\nimport GameObject from './GameObject';\nimport Quaternion from './Quaternion';\nimport Camera from './Camera';\nimport MathTools from './MathTools';\n\nclass VehicleController {\n    constructor() {\n        this.vehicles = [];\n        this.distFromVehicle = 3;\n        this.isReady = false;\n\n        this.ekey = new GameObject('ekey', null, false, false, true, true, new Vector3(-23.75, 2, -10), Quaternion.Identity());\n        this.rkey = new GameObject('rkey', null, false, false, true, true, new Vector3(-23.75, 2, -10), Quaternion.Identity());\n\n        this.ekey.LoadModel('ekey', './assets/models/ekey.glb', true)\n            .then(() => {\n                this.ekey.model.mesh.visible = false;\n            \n            });\n            this.rkey.LoadModel('rkey', './assets/models/rkey.glb', true)\n            .then(() => {\n                this.isReady = true;\n                this.rkey.model.mesh.visible = false;\n            });\n        this.inRangeVehicle = null;\n        this.vehicleInUse = null;\n    }\n\n    addVehicle(vehicle) {\n        this.vehicles.push(vehicle);\n    }\n\n    useVehicle(player) {\n        if (this.inRangeVehicle === null) return null;\n\n        this.inRangeVehicle.inUse = true;\n        Camera.target = this.inRangeVehicle;\n        this.vehicleInUse = this.inRangeVehicle;\n\n        return this.inRangeVehicle;\n    }\n\n    leaveVehicle(){\n        this.vehicleInUse = null;\n    }\n\n    updateEKey(){\n        if (this.inRangeVehicle !== null) {\n\n            let vehiclePos = this.inRangeVehicle.position;\n            this.ekey.setPosition(new Vector3(vehiclePos.x, vehiclePos.y + 1, vehiclePos.z));\n            this.ekey.model.mesh.visible = true;\n        }\n        else {\n            this.ekey.model.mesh.visible = false;\n        }\n\n        if (this.ekey.model.mesh.visible) {\n            let camPos = new Vector3(Camera.position.x, 0, Camera.position.z);\n            let eKeyPos = new Vector3(this.ekey.position.x, 0, this.ekey.position.z);\n            let lookAt = Quaternion.LookRotation(Vector3.Subtract(camPos, eKeyPos), Vector3.up);\n            this.ekey.setRotation(Vector3.MultiplyScalar(lookAt.Euler(), MathTools.deg2Rad));\n        }\n\n    }\n\n    updateRKey(){\n        if (this.vehicleInUse !== null) {\n\n            if (this.vehicleInUse.inUse && this.vehicleInUse.isUpsideDown()) {\n                let vehiclePos = this.vehicleInUse.position;\n                this.rkey.setPosition(new Vector3(vehiclePos.x, vehiclePos.y + 1, vehiclePos.z));\n                this.rkey.model.mesh.visible = true;\n            }\n            else {\n                this.rkey.model.mesh.visible = false;\n            }\n        }\n    }\n\n    findInRangeVehicle(pos){\n        this.inRangeVehicle = null;\n        let closest = this.distFromVehicle + 1;\n\n        for (let i = 0; i < this.vehicles.length; i++) {\n            let vehiclePos = this.vehicles[i].position;\n            vehiclePos = new Vector3(vehiclePos.x, vehiclePos.y, vehiclePos.z);\n\n            const dist = Vector3.Distance(pos, vehiclePos);\n            if (dist < closest && dist <= 3 && !this.vehicles[i].inUse) {\n                closest = dist;\n                this.inRangeVehicle = this.vehicles[i];\n            }\n        }\n    }\n    \n    checkVehicleInRange(pos) {\n\n        if (!this.isReady) return;\n\n        this.findInRangeVehicle(pos);\n        this.updateEKey();\n        this.updateRKey();\n    }\n}\n\nconst VehicleManager = new VehicleController();\nexport default VehicleManager; ","import MathTools from './MathTools';\n\nexport default class Vector2 {\n\n    constructor(x = 0.0, y = 0.0) {\n        this.x = x;\n        this.y = y;\n    }\n\n    static get zero() { return new Vector2(0.0, 0.0); }\n    static get one() { return new Vector2(1.0, 1.0); }\n    static get up() { return new Vector2(0.0, 1.0); }\n    static get down() { return new Vector2(0.0, -1.0); }\n    static get left() { return new Vector2(-1.0, 0.0); }\n    static get right() { return new Vector2(1.0, 0.0); }\n\n    static add(v1, v2) {\n        let v = new Vector2(0.0, 0.0);\n        v.x = v1.x + v2.x;\n        v.y = v1.y + v2.y;\n\n        return v;\n    }\n\n    static subtract(v1, v2) {\n        let v = new Vector2(0.0, 0.0);\n        v.x = v1.x - v2.x;\n        v.y = v1.y - v2.y;\n\n        return v;\n    }\n\n    static multiply(v1, v2) {\n        let v = new Vector2(0.0, 0.0);\n        v.x = v1.x * v2.x;\n        v.y = v1.y * v2.y;\n\n        return v;\n    }\n\n    static addScalar(v1, scalar) {\n        let v = new Vector2(0.0, 0.0);\n        v.x = v1.x + scalar;\n        v.y = v1.y + scalar;\n\n        return v;\n    }\n\n    static subtractScalar(v1, scalar) {\n        let v = new Vector2(0.0, 0.0, 0.0);\n        v.x = v1.x - scalar;\n        v.y = v1.y - scalar;\n\n        return v;\n    }\n\n    static multiplyScalar(v1, scalar) {\n        let v = new Vector2(0.0, 0.0);\n        v.x = v1.x * scalar;\n        v.y = v1.y * scalar;\n\n        return v;\n    }\n\n    static distance(v1, v2) {\n        let delta = Vector2.subtract(v2, v1);\n\n        let distance = Math.sqrt(delta.x * delta.x + delta.y * delta.y);\n\n        return distance;\n    }\n\n    static dot(v1, v2) {\n        return v1.x * v2.x + v1.y * v2.y;\n    }\n\n    static Equals(v1, v2) {\n        return (v1.x > v2.x - Number.EPSILON && v1.x < v2.x + Number.EPSILON) &&\n            (v1.y > v2.y - Number.EPSILON && v1.y < v2.y + Number.EPSILON);\n    }\n\n    length() {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n    }\n\n    magnitude() {\n        return this.length();\n    }\n\n    normalize() {\n        let mag = this.magnitude();\n\n        if (MathTools.approximate(mag, 0.0)) {\n            this.x = 0.0;\n            this.y = 0.0;\n            this.z = 0.0;\n\n            return;\n        }\n\n        this.x /= mag;\n        this.y /= mag;\n        this.z /= mag;\n    }\n\n    toString() {\n        return '( x: ' + this.x + '  y: ' + this.y + '  z: ' + this.z + ' )';\n    }\n}","import Vector2 from './Vector2';\nimport Gamepads from 'gamepads';\n\nclass GamepadManager {\n\n    constructor() {\n\n        this.Buttons = {\n            BUTTON_BOTTOM: 0,\n            BUTTON_RIGHT: 1,\n            BUTTON_LEFT: 2,\n            BUTTON_TOP: 3,\n            BUMPER_LEFT: 4,\n            BUMPER_RIGHT: 5,\n            TRIGGER_LEFT: 6,\n            TRIGGER_RIGHT: 7,\n            BUTTON_CONTROL_LEFT: 8,\n            BUTTON_CONTROL_RIGHT: 9,\n            BUTTON_JOYSTICK_LEFT: 10,\n            BUTTON_JOYSTICK_RIGHT: 11,\n            D_PAD_UP: 12,\n            D_PAD_BOTTOM: 13,\n            D_PAD_LEFT: 14,\n            D_PAD_RIGHT: 15,\n            BUTTON_CONTROL_MIDDLE: 16,\n        };\n\n        this.buttonsDown = new Map();\n        this.buttonsPressed = new Map();\n\n        this.connected = false;\n        Gamepads.start();\n\n        this.leftAxis = Vector2.zero;\n        this.rightAxis = Vector2.zero;\n\n        Gamepads.addEventListener('connect', e => {\n            this.connected = true;\n            e.gamepad.addEventListener('joystickmove', e => {\n                this.leftAxis = new Vector2(e.horizontalValue, e.verticalValue);\n            }, [0, 1]);\n\n            e.gamepad.addEventListener('joystickmove', e => {\n                this.rightAxis = new Vector2(e.horizontalValue, e.verticalValue);\n            }, [2, 3]);\n\n            e.gamepad.addEventListener('buttonpress', e => {\n                this.addButton(e.index);\n            });\n            e.gamepad.addEventListener('buttonrelease', e => {\n                this.removeButton(e.index);\n            });\n        });\n\n        Gamepads.addEventListener('disconnect', e => {\n            this.connected = false;\n        });\n    }\n\n    deadzone(axis) {\n        let newAxis = axis;\n\n        if (Math.abs(newAxis.x) < 0.015)\n            newAxis.x = 0;\n\n        if (Math.abs(newAxis.y) < 0.015)\n            newAxis.y = 0;\n\n        return newAxis;\n    }\n\n    leftStick() {\n        if (!this.connected) return Vector2.zero;\n        let axis = this.deadzone(this.leftAxis);\n\n        return axis;\n    }\n\n    rightStick() {\n        if (!this.connected) return Vector2.zero;\n        let axis = this.deadzone(this.rightAxis);\n\n        return axis;\n    }\n\n    addButton(button) {\n        this.buttonsDown.set(button, 1);\n        if (this.buttonsPressed.get(button) !== 2) {\n            this.buttonsPressed.set(button, 1);\n        }\n    }\n\n    removeButton(button) {\n        this.buttonsDown.delete(button);\n        this.buttonsPressed.delete(button);\n    }\n\n    isButtonDown(button) {\n        return this.buttonsDown.has(button);\n    }\n\n    isButtonPressed(button) {\n\n        if (this.buttonsPressed.has(button) && this.buttonsPressed.get(button) === 1) {\n            this.buttonsPressed.set(button, 2);\n            return true;\n        }\n\n        return false;\n    }\n\n    getTrigger(trigger) {\n\n    }\n\n    clearButtons() {\n        this.buttonsDown.clear();\n        this.buttonsPressed.clear();\n        this.leftAxis = Vector2.zero;\n        this.rightAxis = Vector2.zero;\n    }\n\n    isConnected() {\n        return this.connected;\n    }\n}\n\nconst Gamepad = new GamepadManager();\nexport default Gamepad;","import * as THREE from \"three\";\nimport GameObject from './GameObject';\nimport Input from './Input';\nimport Time from './Time';\nimport Vector3 from './Vector3';\nimport VehicleManager from './VehicleManager';\nimport Quaternion from './Quaternion';\nimport Camera from './Camera';\nimport Vector2 from './Vector2';\nimport Gamepad from './Gamepad';\n\nexport default class Player extends GameObject {\n\n    constructor(name = null, meshPath = null, skinnedMesh = false, castShadow = false, recieveShadow = false, flatShading = false, position = Vector3.zero, rotation = Quaternion.Identity()) {\n        super(name, meshPath, skinnedMesh, castShadow, recieveShadow, flatShading, position, rotation);\n        this.vehicle = null;\n    }\n\n    changeAnimation(animation) {\n        this.moveSpeed = 5.0;\n\n        if (this.model !== null)\n            this.model.playAnimation(animation);\n    }\n\n    update() {\n\n        const ePressed = Input.isKeyPressed('e') || Gamepad.isButtonPressed(Gamepad.Buttons.BUTTON_TOP);\n        if (ePressed && this.vehicle === null)\n            this.vehicle = VehicleManager.useVehicle();\n        else\n            if (ePressed && this.vehicle !== null) {\n                this.vehicle.inUse = false;\n                VehicleManager.leaveVehicle();\n                let pos = this.vehicle.position;\n                Camera.target = this;\n                this.vehicle = null;\n                this.setPosition(new Vector3(pos.x + 2, 1, pos.z));\n\n            }\n\n        if (this.vehicle !== null && this.vehicle !== 'undefined') {\n            this.setPosition(new Vector3(0.0, -100, 0.0));\n\n            super.update();\n            return;\n        }\n\n        if (this.model && this.model.hasOwnProperty('mixer') && this.model.mixer !== null)\n            this.model.mixer.timeScale = 1.0;\n\n        let zMove = 0;\n        let xMove = 0;\n\n        if (Input.isKeyDown('w') || Input.isKeyDown('ArrowUp'))\n            zMove = -1;\n\n        if (Input.isKeyDown('s') || Input.isKeyDown('ArrowDown'))\n            zMove = 1;\n\n        if (Input.isKeyDown('a') || Input.isKeyDown('ArrowLeft'))\n            xMove = -1;\n\n        if (Input.isKeyDown('d') || Input.isKeyDown('ArrowRight'))\n            xMove = 1;\n\n        let stick = Gamepad.leftStick();\n\n        if (!Vector2.Equals(stick, Vector2.zero)) {\n            stick.normalize();\n            xMove = stick.x;\n            zMove = stick.y;\n        }\n\n        let moveDir = new THREE.Vector3(xMove, 0, zMove);\n        moveDir.normalize();\n\n        if (!Vector3.Equals(moveDir, Vector3.zero)) {\n            this.forward = moveDir.normalize();\n            this.move(new Vector3(this.forward.x * 3 * Time.deltaTime, 0.0, this.forward.z * 3 * Time.deltaTime));\n\n            this.changeAnimation('Walk');\n        }\n        else {\n            this.changeAnimation('Rest');\n        }\n        const angle = Vector3.Angle(Vector3.back, this.forward);\n\n        this.setRotation(new Vector3(0, angle, 0));\n\n        super.update();\n    }\n\n    collision(col) {\n        // Need to implement collision callbacks\n    }\n}","import * as THREE from 'three';\n\nclass Renderer {\n    constructor() {\n        this.renderer = null;\n    }\n\n    InitRenderer(canvas, width, height, loopCallback) {\n\n        return new Promise((resolve, reject) => {\n            this.renderer = new THREE.WebGLRenderer({ canvas: canvas, alpha: false, antialias: true, precision: 'highp', powerPreference:'high-performance' });\n            this.renderer.setSize(width, height);\n            this.renderer.shadowMap.enabled = true;\n            this.renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n            this.renderer.cullFace = THREE.CullFaceBack;\n          \n            this.renderer.outputEncoding = THREE.GammaEncoding;\n       \n            this.renderer.autoClear = true;\n    \n            this.renderer.setClearColor('skyblue', 1.0);\n            this.renderer.clearAlpha = 1;\n            this.renderer.setAnimationLoop(loopCallback);\n\n            if (this.renderer !== null)\n                resolve(this.renderer);\n            else\n                reject('Error creating renderer');\n        });\n    }\n\n    Render(scene, camera){\n        this.renderer.render(scene, camera);\n    }\n}\n\nexport default Renderer;","import Camera from './Camera';\nimport * as THREE from 'three';\nimport Time from './Time';\nimport Scene from './Scene';\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass';\nimport { FXAAShader } from 'three/examples/jsm/shaders/FXAAShader';\nimport { BokehPass } from 'three/examples/jsm/postprocessing/BokehPass';\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\n\nclass PostProcessingManager {\n    init(renderer) {\n        this.composer = new EffectComposer(renderer);\n        this.renderPass = new RenderPass(Scene.getScene(), Camera.mainCamera);\n        this.renderPass.clearColor = new THREE.Color('skyblue');\n        this.renderPass.clearAlpha = 1;\n\n        this.composer.addPass(this.renderPass);\n\n        this.bokeh = null;\n        this.bloom = null;\n        this.ffxa = null;\n        this.renderer = renderer;\n    }\n\n    isUsingEffects() {\n        return this.bokeh || this.bloom || this.fxaa;\n    }\n\n    addFXAA() {\n        this.ffxa = new ShaderPass(FXAAShader);\n        this.ffxa.uniforms['resolution'].value.set(1 / Scene.screenWidth * 5, 1 / Scene.screenHeight);\n        this.composer.addPass(this.ffxa);\n    }\n\n    addBokeh() {\n        this.bokeh = new BokehPass(Scene.scene, Camera.mainCamera, {\n            focus: 3000.0,\n            aperture: 0.002,\n            maxblur: 0.0025,\n\n            width: Scene.width,\n            height: Scene.height\n        });\n        this.composer.addPass(this.bokeh);\n    }\n\n    addBloom() {\n        this.bloom = new UnrealBloomPass(\n            new THREE.Vector2(Scene.screenWidth, Scene.screenHeight),\n            .3,\n            0.4,\n            .8);\n\n        this.composer.addPass(this.bloom)\n    }\n\n    render() {\n        this.renderPass.camera = Camera.mainCamera;\n        this.composer.render(Time.deltaTime);\n    }\n}\n\nconst PostProcessing = new PostProcessingManager();\nexport default PostProcessing;","import * as THREE from \"three\";\nimport Camera from './Camera';\n\nclass AudioManager {\n    constructor() {\n        this.listener = new THREE.AudioListener();\n        Camera.mainCamera.add(this.listener);\n    }\n\n    LoadSound(path, loop = false, volume = 0.5) {\n        return new Promise((resolve, reject) => {\n            const loader = new THREE.AudioLoader();\n            let sound = new THREE.PositionalAudio(this.listener);\n\n            try {\n                loader.load(path, (buffer) => {\n\n                    if (buffer === null) reject('Error loading sound');\n\n                    sound.setBuffer(buffer);\n                    sound.setLoop(loop);\n                    sound.setVolume(volume);\n                    sound.setRefDistance(20);\n\n                    resolve(sound);\n                });\n            }\n            catch (e) {\n                resolve(e);\n            }\n        });\n    }\n}\n\nconst Audio = new AudioManager();\nObject.freeze(Audio);\nexport default Audio;","import Scene from './Scene';\nimport Physics from './Physics';\nimport GameObject from './GameObject';\nimport Quaternion from './Quaternion';\nimport Vector3 from './Vector3';\nimport Input from './Input';\nimport Time from './Time';\nimport MathTools from './MathTools';\nimport Camera from './Camera';\nimport Audio from './Audio';\nimport Content from './Content';\nimport Ammo from 'ammo.js';\nimport VehicleManager from './VehicleManager';\nimport Gamepad from './Gamepad';\nimport Vector2 from './Vector2';\n\nexport default class Vehicle extends GameObject {\n    constructor(options) {\n        super();\n\n        this.inUse = false;\n        this.castShadow = true;\n        this.recieveShadow = true;\n        this.skinnedMesh = false;\n\n        this.topSpeed = options.topSpeed;\n        this.steeringRate = 5.0;\n        this.accelRate = options.accelRate;\n        this.breakForce = options.breakForce;\n        this.accelForceFront = options.accelForceFront;\n        this.accelForceBack = options.accelForceBack;\n        this.reverse = false;\n        this.engineSound = null;\n        this.tireSquealSound = null;\n        this.enginePitch = options.enginePitch;\n        this.centerOfMass = options.centerOfMass;\n        this.downForce = options.downForce;\n        this.options = options;\n\n        Audio.LoadSound('./assets/sounds/engine.wav', true, 0.1)\n            .then(sound => {\n                this.engineSound = sound;\n                Content.LoadMesh(options.bodyModel, options.bodyModel, false, true, true, false)\n                    .then(model => {\n                        this.model = model;\n                        this.engineSound.parrent = this.model;\n                        this.setPosition(this.position);\n                        this.setRotation(this.rotation);\n\n                    })\n                    .catch(e => {\n                        console.log(e);\n                    });\n\n            })\n            .catch(e => {\n                console.log(e)\n            });\n\n        Audio.LoadSound('./assets/sounds/tiresqueal.wav', true, 0.5)\n            .then(sound => {\n                this.tireSquealSound = sound;\n            })\n            .catch(e => {\n                console.log(e)\n            });\n\n        this.bodyShape = Physics.createBoxShape(new Vector3(options.bodyWidth, options.bodyHeight, options.bodyLength));\n\n        var transform = new Ammo.btTransform();\n        transform.setIdentity();\n        transform.setOrigin(new Ammo.btVector3(options.position.x, options.position.y, options.position.z));\n        transform.setRotation(new Ammo.btQuaternion(options.rotation.x, options.rotation.y, options.rotation.z, options.rotation.w));\n        var motionState = new Ammo.btDefaultMotionState(transform);\n        var localInertia = new Ammo.btVector3(0, 0, 0);\n        this.bodyShape.calculateLocalInertia(options.mass, localInertia);\n        this.body = new Ammo.btRigidBody(new Ammo.btRigidBodyConstructionInfo(options.mass, motionState, this.bodyShape, localInertia));\n        this.body.setActivationState(4);\n\n        Physics.world.addRigidBody(this.body);\n        this.tuning = new Ammo.btVehicleTuning();\n\n        this.raycaster = new Ammo.btDefaultVehicleRaycaster(Physics.world);\n        this.vehicle = new Ammo.btRaycastVehicle(this.tuning, this.body, this.raycaster);\n\n        this.vehicle.setCoordinateSystem(0, 1, 2);\n\n        Physics.world.addAction(this.vehicle);\n        Scene.addGameObject(this);\n\n\n        this.wheelModels = [];\n        this.wheelModels.push(new GameObject(options.wheelLeftModel, options.wheelLeftModel, false, true, true));\n        this.wheelModels.push(new GameObject(options.wheelRightModel, options.wheelRightModel, false, true, true));\n        this.wheelModels.push(new GameObject(options.wheelRightModel, options.wheelRightModel, false, true, true));\n        this.wheelModels.push(new GameObject(options.wheelLeftModel, options.wheelLeftModel, false, true, true));\n\n        for (let i = 0; i < this.wheelModels.length; i++) {\n            this.wheelModels[i].allowUpdate = false;\n        }\n\n        this.wheelInfo = [];\n        this.wheelInfo.push(this.createWheel(options, true, options.frontLeftPos, new Vector3(0, -1, 0), new Vector3(-1, 0, 0)));\n        this.wheelInfo.push(this.createWheel(options, true, options.frontRightPos, new Vector3(0, -1, 0), new Vector3(-1, 0, 0)));\n        this.wheelInfo.push(this.createWheel(options, false, options.backRightPos, new Vector3(0, -1, 0), new Vector3(-1, 0, 0)));\n        this.wheelInfo.push(this.createWheel(options, false, options.backLeftPos, new Vector3(0, -1, 0), new Vector3(-1, 0, 0)));\n\n        this.tuning = new Ammo.btVehicleTuning();\n        this.currentAccelFront = 0;\n        this.currentAccelBack = 0;\n        this.currentBrakingFront = 0;\n        this.currentBrakingBack = 0;\n        this.steeringAngle = 0;\n        this.speed = 0;\n\n        VehicleManager.addVehicle(this);\n    }\n\n    createWheel(options, front, wheelPos, wheelDir, wheelAxle) {\n\n        let wheel = this.vehicle.addWheel(wheelPos.to_btVector3(), wheelDir.to_btVector3(), wheelAxle.to_btVector3(), options.suspensionLen, options.radius, this.tuning, front);\n\n        wheel.set_m_suspensionStiffness(options.stiffness);\n        wheel.set_m_wheelsDampingRelaxation(options.damping);\n        wheel.set_m_wheelsDampingCompression(options.compression);\n\n        const friction = front ? options.frontFriction : options.backFriction;\n        wheel.set_m_frictionSlip(friction);\n        wheel.set_m_rollInfluence(options.roll);\n\n        return wheel;\n    }\n\n    isUpsideDown() {\n        const rot = this.rotation.Euler();\n        return (Math.abs(rot.x) >= 40 || Math.abs(rot.z) >= 40);\n    }\n    updateInput() {\n        if (this.isUpsideDown() && this.inUse) {\n            if (Input.isKeyDown('r')) {\n                const position = new Vector3(this.position.x, this.position.y + 1.5, this.position.z);\n                const rotation = new Quaternion(0.0, this.rotation.y, 0.0, this.rotation.w);\n                const quat = new Ammo.btQuaternion(rotation.x, rotation.y, rotation.z, rotation.w);\n\n                this.body.getWorldTransform().setOrigin(Vector3.toBTV3(position));\n                this.body.getWorldTransform().setRotation(quat);\n                this.body.getMotionState().setWorldTransform(this.body.getWorldTransform());\n            }\n        }\n\n        if (!this.inUse) {\n            if (this.engineSound !== null && this.engineSound.isPlaying)\n                this.engineSound.stop();\n            return;\n        }\n\n        if (Gamepad.isConnected()) {\n            let axis = Gamepad.leftStick();\n\n            if (!Vector2.Equals(axis, Vector2.zero))\n                this.steeringAngle = -25 * axis.x;\n        }\n\n        if (this.engineSound !== null && !this.engineSound.isPlaying)\n            this.engineSound.play();\n\n        this.reverse = false;\n\n        if ((Input.isKeyDown('w') || Input.isKeyDown('ArrowUp') || Gamepad.isButtonDown(Gamepad.Buttons.TRIGGER_RIGHT)) && this.speed <= this.topSpeed) {\n\n            this.currentBrakingFront = 0;\n            this.currentBrakingBack = 0;\n            this.currentAccelBack = this.accelForceBack * this.accelRate;\n            this.currentAccelFront = this.accelForceFront * this.accelRate;\n        }\n        else {\n            this.currentAccelBack = 0;\n            this.currentAccelFront = 0;\n            this.currentBrakingFront = 0.5;\n            this.currentBrakingBack = 0.5;\n        }\n\n        if (Input.isKeyDown('s') || Input.isKeyDown('ArrowDown') || Gamepad.isButtonDown(Gamepad.Buttons.TRIGGER_LEFT)) {\n            this.reverse = true;\n            if (this.speed <= 0) {\n                this.currentBrakingFront = 0;\n                this.currentBrakingBack = 0;\n                this.currentAccelBack = -((this.accelForceBack * 0.5) * this.accelRate);\n                this.currentAccelFront = -((this.accelForceFront * 0.5) * this.accelRate);\n            }\n            else {\n                this.currentBrakingFront = this.breakForce * 0.25;\n                this.currentBrakingBack = this.breakForce * 0.25;\n            }\n        }\n\n        if (Input.isKeyDown('a') || Input.isKeyDown('ArrowLeft')) {\n            this.steeringAngle += 15 * this.steeringRate * Time.deltaTime;\n        }\n        else\n            if (Input.isKeyDown('d') || Input.isKeyDown('ArrowRight')) {\n                this.steeringAngle -= 15 * this.steeringRate * Time.deltaTime;\n            }\n            else {\n                this.steeringAngle = MathTools.moveTowards(this.steeringAngle, 0.0, this.steeringRate * Time.deltaTime);\n            }\n\n        this.steeringAngle = MathTools.clamp(this.steeringAngle, -25, 25);\n    }\n\n    updateSound() {\n        if (Math.abs(this.body.getAngularVelocity().y()) > 1) {\n\n            if (this.tireSquealSound !== null && this.model !== null) {\n\n                if (!this.tireSquealSound.isPlaying)\n                    this.tireSquealSound.play();\n\n                this.tireSquealSound.panner.setPosition(this.model.mesh.position.x, this.model.mesh.position.y, this.model.mesh.position.z);\n\n                this.tireSquealSound.setPlaybackRate(0.7);\n                this.tireSquealSound.setDetune(-250);\n            }\n        }\n        else {\n            if (this.tireSquealSound !== null && this.tireSquealSound.isPlaying)\n                this.tireSquealSound.stop();\n        }\n\n        if (this.engineSound !== null && this.model !== null) {\n\n            if (this.engineSound.isPlaying && this.model.mesh) {\n\n                this.engineSound.setDetune((Math.abs(this.speed) + this.enginePitch) * 10);\n                this.engineSound.panner.setPosition(this.model.mesh.position.x, this.model.mesh.position.y, this.model.mesh.position.z);\n\n            }\n        }\n    }\n\n    updateWheels() {\n        for (let i = 0; i < this.vehicle.getNumWheels(); i++) {\n\n            this.vehicle.updateWheelTransform(i, false);\n\n            const tm = this.vehicle.getWheelTransformWS(i);\n            const p = tm.getOrigin();\n            const q = tm.getRotation();\n\n            if (this.wheelModels[i].model && this.wheelModels[i].model.mesh) {\n                this.wheelModels[i].model.mesh.position.set(p.x(), p.y(), p.z());\n                this.wheelModels[i].model.mesh.quaternion.set(q.x(), q.y(), q.z(), q.w());\n            }\n        }\n    }\n\n    updateRigidBody() {\n        const tm = this.body.getWorldTransform();\n        const p = tm.getOrigin();\n        const q = tm.getRotation();\n\n        if (this.model && this.model.mesh) {\n            this.model.mesh.position.set(p.x(), p.y(), p.z());\n            this.model.mesh.quaternion.set(q.x(), q.y(), q.z(), q.w());\n            this.position = new Vector3(p.x(), p.y(), p.z());\n            this.rotation = new Quaternion(q.x(), q.y(), q.z(), q.w());\n        }\n    }\n\n    updateSpeed() {\n        let vel = (this.vehicle.getRigidBody().getLinearVelocity().length() - 0.163);\n\n        if (vel < 0.009)\n            vel = 0;\n\n        const dir = this.reverse && this.speed < 0.05 ? -1 : 1;\n        this.speed = vel * 9.8 * dir;\n    }\n\n    updateMovement() {\n        this.vehicle.applyEngineForce(this.currentAccelFront, 0);\n        this.vehicle.applyEngineForce(this.currentAccelFront, 1);\n        this.vehicle.applyEngineForce(this.currentAccelBack, 2);\n        this.vehicle.applyEngineForce(this.currentAccelBack, 3);\n    }\n\n    updateSteering() {\n        this.vehicle.setBrake(this.currentBrakingFront, 0);\n        this.vehicle.setBrake(this.currentBrakingFront, 1);\n        this.vehicle.setBrake(this.currentBrakingBack / 2, 2);\n        this.vehicle.setBrake(this.currentBrakingBack / 2, 3);\n        this.vehicle.setSteeringValue(0, 3);\n        this.vehicle.setSteeringValue(0, 2);\n        this.vehicle.setSteeringValue(this.steeringAngle * MathTools.deg2Rad, 0);\n        this.vehicle.setSteeringValue(this.steeringAngle * MathTools.deg2Rad, 1);\n    }\n\n    resetMovementWhenNotInUse() {\n        if (!this.inUse) {\n            this.currentBrakingFront = this.breakForce * 0.25;\n            this.currentBrakingBack = this.breakForce * 0.25;\n            this.currentAccelBack = 0;\n            this.currentAccelFront = 0;\n        }\n    }\n\n    update() {\n        Camera.mainCamera.add(Audio.listener);\n        this.body.applyCentralImpulse(new Ammo.btVector3(0, -(Math.abs(this.speed) * this.downForce), 0));\n        this.resetMovementWhenNotInUse();\n        this.updateInput();\n        this.updateSound();\n        this.updateMovement();\n        this.updateSteering();\n        this.updateWheels();\n        this.updateRigidBody();\n        this.updateSpeed();\n    }\n}\n","import Vector3 from './Vector3';\nimport GameEngine from './GameEngine';\nimport Input from './Input';\n\nclass InfoStationsController {\n    constructor() {\n        this.infoStations = [];\n        this.activationDistance = 0.75;\n        this.inUse = false;\n    }\n\n    addInfoStation(position, stationName) {\n        this.infoStations.push({ position: position, name: stationName });\n    }\n\n    update() {\n        let activate = false;\n        let openModal = '';\n        let closestDistance = 10;\n\n        for (let i = 0; i < this.infoStations.length; i++) {\n            const dist = Vector3.Distance(this.infoStations[i].position, GameEngine.player.position);\n\n            if (dist < closestDistance) closestDistance = dist;\n\n            if (dist <= this.activationDistance && !this.inUse) {\n                this.inUse = true;\n                activate = true;\n                openModal = this.infoStations[i].name;\n                break;\n            }\n        }\n\n        if (closestDistance > this.activationDistance)\n            this.inUse = false;\n\n        if (activate) {\n            Input.clearKeys();\n            GameEngine.openModal(openModal);\n        }\n    }\n}\n\nconst InfoStationManager = new InfoStationsController();\n\nexport default InfoStationManager; ","import * as THREE from 'three';\nimport GameObject from './GameObject';\nimport Scene from './Scene';\nimport Camera from './Camera';\n\nexport default class Light extends GameObject {\n\n    static LightType = {\n        DIRECTIONAL: 0,\n        POINT: 1,\n        SPOT: 2,\n        AMBIENT: 3,\n    }\n\n    constructor(options) {\n        super();\n        this.options = options;\n\n        switch (options.lightType) {\n            case Light.LightType.DIRECTIONAL:\n                this.createDirectionalLight();\n                break;\n            case Light.LightType.POINT:\n                break;\n            case Light.LightType.SPOT:\n                break;\n            case Light.LightType.AMBIENT:\n                this.createAmbientLight();\n                break;\n            default:\n                console.log('Unkown light type')\n        }\n    }\n\n    createDirectionalLight() {\n        this.light = new THREE.DirectionalLight(this.options.color, this.options.intensity);\n\n        this.light.castShadow = this.options.castShadow;\n\n        this.light.shadow.mapSize.width = this.options.shadowMapWidth;\n        this.light.shadow.mapSize.height = this.options.shadowMapHeight;\n        this.light.shadow.camera.near = this.options.cameraNear;\n        this.light.shadow.camera.far = this.options.cameraFar;\n        this.light.shadow.bias = this.options.shadowBias;\n\n        this.light.shadow.camera.top = this.options.shadowCameraSize;\n        this.light.shadow.camera.bottom = -this.options.shadowCameraSize;\n        this.light.shadow.camera.left = -this.options.shadowCameraSize;\n        this.light.shadow.camera.right = this.options.shadowCameraSize;\n\n        this.light.target = new THREE.Object3D();\n\n        Scene.add(this.light.target);\n        Scene.add(this.light);\n    }\n\n    createAmbientLight() {\n        this.light = new THREE.AmbientLight(this.options.color, this.options.intensity);\n        Scene.add(this.light);\n    }\n\n    update() {\n        if (this.options.lightType === Light.LightType.DIRECTIONAL) {\n            const camPos = Camera.position;\n            this.light.position.set(camPos.x, 1, camPos.z + 5);\n            this.light.target.position.set(this.options.target.x + camPos.x, this.options.target.y, this.options.target.z + camPos.z);\n        }\n    }\n}","import Player from './Player';\nimport Scene from './Scene';\nimport Camera from './Camera';\nimport Time from './Time';\nimport Vector3 from './Vector3';\nimport Physics from './Physics';\nimport GameObject from './GameObject';\nimport Renderer from './Renderer';\nimport PostProcessing from './PostProcessing';\nimport Vehicle from './Vehicle';\nimport Quaternion from './Quaternion';\nimport VehicleManager from './VehicleManager';\nimport InfoStationManager from './InfoStationManager';\nimport Input from './Input';\nimport Gamepad from './Gamepad';\nimport Light from './Light';\n\n\nclass Engine {\n    constructor() {\n\n        this.fps = 0;\n        this.fpsTime = 0;\n\n        Scene.setExpoFog('skyblue', 0.01);\n\n        this.light = new Light({\n            lightType: Light.LightType.DIRECTIONAL,\n            color: 0xffffff,\n            intensity: 1,\n            castShadow: true,\n            shadowMapWidth: 8000,\n            shadowMapHeight: 8000,\n            cameraNear: 0.1,\n            cameraFar: 500,\n            shadowBias: -0.00025,\n            shadowCameraSize: 50,\n            target: new Vector3(-5, -5, -5)\n        });\n\n        this.ambientLight = new Light({\n            lightType: Light.LightType.AMBIENT,\n            color: 0xffffff,\n            intensity: 0.5\n        });\n\n        this.Load().then(() => { });\n\n        requestAnimationFrame(this.Animate);\n    }\n\n    SetOpenModalCallback(openModal, isModalOpen) {\n        this.openModal = openModal;\n        this.isModalOpen = isModalOpen;\n    }\n\n    InitRenderer = (canvas, width, height) => {\n        this.renderer = new Renderer();\n        this.renderer.InitRenderer(canvas, width, height, this.Animate).then(renderer => {\n            PostProcessing.init(renderer);\n            // PostProcessing.addFXAA();\n            // PostProcessing.addBloom();\n            //rz PostProcessing.addBokeh(); \n        })\n            .then(() => {\n                //    this.renderer.compile(Scene.scene, Camera.mainCamera); \n            });\n    }\n\n    Load = async () => {\n        return await new Promise((resolve, reject) => {\n            this.player = new Player('player', null, true, true, true, new Vector3(0, 1, 0));\n            this.player.LoadModel('player', './assets/models/chris.glb', true)\n            .then(() => {\n                this.player.addRigidBody(1, Physics.createCapsuleShape(0.25, 0.5, Vector3.up), new Vector3(0, 1, 0));\n            });\n           \n\n            this.ground = new GameObject('ground', './assets/models/ground.glb', false, false, true,);\n            this.ground.addRigidBody(0, Physics.createPlaneShape(Vector3.up), new Vector3(0, 0.0, 0));\n\n            this.grass = new GameObject('grass', './assets/models/grass.glb', false, true, true, true, new Vector3(0, 0, -10));\n\n            this.moundSign = new GameObject('moundsign', './assets/models/moundsign.glb', false, true, true,);\n            this.moundSign.setPosition(new Vector3(0, 0, -10));\n\n            this.road = new GameObject('road', null, false, true, true, true);\n            this.road.LoadModel('road', './assets/models/road.glb', true)\n                .then(() => {\n                    Physics.createMeshShape(this.road.model.mesh)\n                        .then(shape => {\n                            this.road.addRigidBody(0, shape, new Vector3(0, 0, -10));\n                        });\n                });\n\n            this.parkinglot = new GameObject('parkinglot', null, false, true, true, true);\n            this.parkinglot.LoadModel('parkinglot', './assets/models/parkinglot.glb', true)\n                .then(() => {\n                    Physics.createMeshShape(this.parkinglot.model.mesh)\n                        .then(shape => {\n                            this.parkinglot.addRigidBody(0, shape, new Vector3(0, 0, -10));\n                        });\n                });\n\n            this.infostation = new GameObject('infostation', './assets/models/infostation.glb', false, false, true, false, new Vector3(0, 0, -10));\n\n            this.infostationbase = new GameObject('infostationbase', null, false, false, true, false, new Vector3(0, 0, -10));\n            this.infostationbase.LoadModel('infostation', './assets/models/infostationbase.glb', true)\n                .then(() => {\n                    Physics.createMeshShape(this.infostationbase.model.mesh)\n                        .then(shape => {\n                            this.infostationbase.addRigidBody(0, shape, new Vector3(0, 0, -10));\n                        });\n                });\n\n            this.mightychicken = new GameObject('mightychicken', null, false, true, true, true);\n\n\n            this.mightychicken.LoadModel('mightychicken', './assets/models/mightychicken.glb', true)\n                .then(() => {\n                    Physics.createMeshShape(this.mightychicken.model.mesh)\n                        .then(shape => {\n                            this.mightychicken.addRigidBody(0, shape, new Vector3(0, 0, -10));\n                        });\n                });\n\n            this.mightychickensign = new GameObject('mightychickensign', null, false, true, true, true);\n\n\n            this.mightychickensign.LoadModel('mightychickensign', './assets/models/mightychickensign.glb', true)\n                .then(() => {\n                    Physics.createMeshShape(this.mightychickensign.model.mesh)\n                        .then(shape => {\n                            this.mightychickensign.addRigidBody(0, shape, new Vector3(0, 0, -10));\n                        });\n                });\n\n                this.mightychickensignpost = new GameObject('mightychickensignpost', null, false, true, true, true);\n\n\n                this.mightychickensignpost.LoadModel('mightychickensignpost', './assets/models/mightychickensignpost.glb', true)\n                    .then(() => {\n                        Physics.createMeshShape(this.mightychickensignpost.model.mesh)\n                            .then(shape => {\n                                this.mightychickensignpost.addRigidBody(0, shape, new Vector3(0, 0, -10));\n                            });\n                    });\n\n\n            InfoStationManager.addInfoStation(new Vector3(-19.921, 0, -7.5799), 'roadracer');\n            InfoStationManager.addInfoStation(new Vector3(-41.183, 0, -0.5502), 'mightychicken');\n\n            this.parkinglotcurb = new GameObject('parkinglotcurb', null, false, true, true, true);\n            this.parkinglotcurb.LoadModel('parkinglotcurb', './assets/models/parkinglotcurb.glb', true)\n                .then(() => {\n                    Physics.createMeshShape(this.parkinglotcurb.model.mesh)\n                        .then(shape => {\n                            this.parkinglotcurb.addRigidBody(0, shape, new Vector3(0, 0, -10));\n                        });\n                });\n\n            this.garage = new GameObject('garage', null, false, true, true, true);\n            this.garage.LoadModel('garage', './assets/models/garage.glb', true)\n                .then(() => {\n                    Physics.createMeshShape(this.garage.model.mesh)\n                        .then(shape => {\n                            this.garage.addRigidBody(0, shape, new Vector3(0, 0, -10));\n                        });\n                });\n\n            this.garagedoor = new GameObject('garagedoor', null, false, true, true, true);\n            this.garagedoor.LoadModel('garagedoor', './assets/models/garagedoor.glb', true)\n                .then(() => {\n                    Physics.createMeshShape(this.garagedoor.model.mesh)\n                        .then(shape => {\n                            this.garagedoor.addRigidBody(0, shape, new Vector3(0, 0, -10));\n                        });\n                });\n\n            this.rrsign = new GameObject('rrsign', null, false, true, true, true);\n            this.rrsign.LoadModel('rrsign', './assets/models/rrsign.glb', true)\n                .then(() => {\n                    Physics.createMeshShape(this.rrsign.model.mesh)\n                        .then(shape => {\n                            this.rrsign.addRigidBody(0, shape, new Vector3(0, 0, -10));\n                        });\n                });\n\n            this.mound = new GameObject('mound', null, false, true, true, true);\n            this.mound.LoadModel('mound', './assets/models/mound.glb', true)\n                .then(() => {\n                    Physics.createMeshShape(this.mound.model.mesh)\n                        .then(shape => {\n                            this.mound.addRigidBody(0, shape, new Vector3(0, 0, -10));\n                        });\n                });\n\n            this.fenceleft = new GameObject('fenceleft', null, false, true, true, true);\n            this.fenceleft.LoadModel('fenceleft', './assets/models/fenceleft.glb', true)\n                .then(() => {\n                    Physics.createMeshShape(this.fenceleft.model.mesh)\n                        .then(shape => {\n                            this.fenceleft.addRigidBody(0, shape, new Vector3(0, 0, -10));\n                        });\n                });\n\n            Camera.target = this.player;\n\n            this.vehicle2 = new Vehicle({\n                breakForce: 10,\n                accelForceFront: 0,\n                accelForceBack: 50,\n                accelRate: 2,\n                downForce: 0.01,\n                topSpeed: 100,\n                bodyWidth: 1.0,\n                bodyHeight: 0.5,\n                bodyLength: 2.128,\n                mass: 75,\n                enginePitch: 25,\n                position: new Vector3(-38.62, 0.56, -9.23),\n                rotation: new Quaternion(0, 0.191, 0, 0.982),\n                centerOfMass: new Vector3(0, -1, 0),\n                bodyModel: './assets/models/classicbug.glb',\n                wheelLeftModel: './assets/models/classicbugwheelLeft.glb',\n                wheelRightModel: './assets/models/classicbugwheelRight.glb',\n                stiffness: 250.0,\n                damping: 2.3,\n                compression: 1.4,\n                backFriction: 0.95,\n                frontFriction: 0.95,\n                roll: .25,\n                radius: 0.25,\n                suspensionLen: 0.075,\n                backLeftPos: new Vector3(-0.4, -0.2, -0.654),\n                backRightPos: new Vector3(0.4, -0.2, -0.654),\n                frontRightPos: new Vector3(0.38, -0.2, 0.719),\n                frontLeftPos: new Vector3(-0.38, -0.2, 0.719),\n            });\n\n            this.vehicle = new Vehicle({\n                breakForce: 25,\n                accelForceFront: 0,\n                accelForceBack: 150,\n                downForce: 0.01,\n                accelRate: 3,\n                topSpeed: 160,\n                bodyWidth: 1.25,\n                bodyHeight: 0.6,\n                bodyLength: 2.128,\n                mass: 300,\n                enginePitch: -100,\n                position: new Vector3(-24.438, 0.624, -10.447),\n                rotation: new Quaternion(0, 0.191, 0, 0.982),\n                centerOfMass: new Vector3(0, -1, 0),\n                bodyModel: './assets/models/hotrod.glb',\n                wheelLeftModel: './assets/models/hotrodwheelLeft.glb',\n                wheelRightModel: './assets/models/hotrodwheelRight.glb',\n                stiffness: 50.0,\n                damping: 2.3,\n                compression: 2.4,\n                backFriction: 2,\n                frontFriction: 2,\n                roll: 0.06,\n                radius: 0.25,\n                suspensionLen: 0.075,\n                backLeftPos: new Vector3(-0.524, -0.309, -0.654),\n                backRightPos: new Vector3(0.524, -0.309, -0.654),\n                frontRightPos: new Vector3(0.524, -0.309, 0.719),\n                frontLeftPos: new Vector3(-0.524, -0.309, 0.719),\n            });\n\n            this.vehicle3 = new Vehicle({\n                breakForce: 25,\n                accelForceFront: 180,\n                accelForceBack: 250,\n                accelRate: 1,\n                downForce: 0.25,\n                topSpeed: 200,\n                bodyWidth: 1.15,\n                bodyHeight: 0.5,\n                bodyLength: 2.128,\n                mass: 200,\n                enginePitch: -50,\n                position: new Vector3(-27.407, 0.59, -9.5),\n                rotation: new Quaternion(0, 0.191, 0, 0.982),\n                centerOfMass: new Vector3(0, -1, 0),\n                bodyModel: './assets/models/sportscar.glb',\n                wheelLeftModel: './assets/models/sportscarwheelLeft.glb',\n                wheelRightModel: './assets/models/sportscarwheelRight.glb',\n                stiffness: 200.0,\n                damping: 2.3,\n                compression: 2.4,\n                backFriction: 0.85,\n                frontFriction: 0.95,\n                roll: 0.25,\n                radius: 0.25,\n                suspensionLen: 0.075,\n                backLeftPos: new Vector3(-0.45, -0.23, -0.62),\n                backRightPos: new Vector3(0.45, -0.23, -0.62),\n                frontRightPos: new Vector3(0.45, -0.23, 0.69),\n                frontLeftPos: new Vector3(-0.45, -0.23, 0.69),\n            });\n\n            this.vehicle4 = new Vehicle({\n                breakForce: 25,\n                accelForceFront: 0,\n                accelForceBack: 500,\n                accelRate: 1,\n                downForce: 0.15,\n                topSpeed: 322,\n                bodyWidth: 1.15,\n                bodyHeight: 0.35,\n                bodyLength: 2.128,\n                mass: 100,\n                enginePitch: 50,\n                position: new Vector3(-35.883, 0.295, -6.466),\n                rotation: new Quaternion(0, 0.545, 0, 0.8383),\n                centerOfMass: new Vector3(0, -1, 0),\n                bodyModel: './assets/models/racecar.glb',\n                wheelLeftModel: './assets/models/racecarwheelLeft.glb',\n                wheelRightModel: './assets/models/racecarwheelRight.glb',\n                stiffness: 500.0,\n                damping: 2.3,\n                compression: 2.4,\n                backFriction: 5,\n                frontFriction: 5,\n                roll: 0.0,\n                radius: 0.25,\n                suspensionLen: 0.01,\n                backLeftPos: new Vector3(-0.4, 0, -0.8),\n                backRightPos: new Vector3(0.4, 0, -0.8),\n                frontRightPos: new Vector3(0.4, 0, 0.67),\n                frontLeftPos: new Vector3(-0.4, 0, 0.67),\n            });\n\n            this.vehicle5 = new Vehicle({\n                breakForce: 10,\n                accelForceFront: 0,\n                accelForceBack: 250,\n                accelRate: 1,\n                downForce: 0.01,\n                topSpeed: 100,\n                bodyWidth: 1.0,\n                bodyHeight: 1.5,\n                bodyLength: 2.128,\n                mass: 500,\n                enginePitch: -100,\n                position: new Vector3(-33.75, 0.649, -10.43),\n                rotation: new Quaternion(0, 0.191, 0, 0.982),\n                centerOfMass: new Vector3(0, -1, 0),\n                bodyModel: './assets/models/truck.glb',\n                wheelLeftModel: './assets/models/truckwheelLeft.glb',\n                wheelRightModel: './assets/models/truckwheelRight.glb',\n                stiffness: 250.0,\n                damping: 2.3,\n                compression: 1.4,\n                backFriction: 0.95,\n                frontFriction: 0.95,\n                roll: .25,\n                radius: 0.25,\n                suspensionLen: 0.1,\n                backLeftPos: new Vector3(-0.45, -0.5, -0.6),\n                backRightPos: new Vector3(0.45, -0.5, -0.6),\n                frontRightPos: new Vector3(0.45, -0.5, 0.95),\n                frontLeftPos: new Vector3(-0.45, -0.5, 0.95),\n            });\n\n            this.vehicle5 = new Vehicle({\n                breakForce: 20,\n                accelForceFront: 0,\n                accelForceBack: 250,\n                accelRate: 1,\n                downForce: 0.2,\n                topSpeed: 150,\n                bodyWidth: 1.0,\n                bodyHeight: 1.0,\n                bodyLength: 2.128,\n                mass: 300,\n                enginePitch: -100,\n                position: new Vector3(-30.404, 0.649, -8.43),\n                rotation: new Quaternion(0, 0.191, 0, 0.982),\n                centerOfMass: new Vector3(0, -1, 0),\n                bodyModel: './assets/models/pickup.glb',\n                wheelLeftModel: './assets/models/pickupwheelLeft.glb',\n                wheelRightModel: './assets/models/pickupwheelRight.glb',\n                stiffness: 50.0,\n                damping: 2.3,\n                compression: 1.4,\n                backFriction: 0.95,\n                frontFriction: 0.95,\n                roll: .25,\n                radius: 0.25,\n                suspensionLen: 0.125,\n                backLeftPos: new Vector3(-0.425, -0.3, -0.79),\n                backRightPos: new Vector3(0.425, -0.3, -0.79),\n                frontRightPos: new Vector3(0.425, -0.3, 0.71),\n                frontLeftPos: new Vector3(-0.425, -0.3, 0.71),\n            });\n            resolve(true);  // This needs to be better\n        });\n    }\n\n    GetRenderer() {\n        return this.renderer.renderer;\n    }\n\n    Animate = () => {\n\n        if (this.isModalOpen()) {\n            Gamepad.clearButtons();\n            Input.clearKeys();\n        }\n\n        Time.Update();\n\n        Physics.update();\n        VehicleManager.checkVehicleInRange(this.player.position);\n        InfoStationManager.update();\n        Scene.update();\n\n        if (PostProcessing.isUsingEffects())\n            PostProcessing.render();\n        else\n            this.renderer.Render(Scene.getScene(), Camera.mainCamera);\n\n        this.fpsTime += Time.deltaTime;\n        this.fps++;\n        if (this.fpsTime >= 1) {\n            //   document.title = this.fps + ' fps';\n            this.fps = 0;\n            this.fpsTime = 0;\n        }\n    }\n}\n\nconst GameEngine = new Engine();\n\nexport default GameEngine;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport 'fontsource-ubuntu';\nimport roadracerbanner from '../../images/roadracerlogo.png';\n\nexport default props => {\n    const { isOpen, closeModal } = props;\n\n    const top = 50;\n    const left = 50;\n\n    let styles = {\n        modal: {\n            display: 'flex',\n            flexDirection: 'column',\n            top: `${top}%`,\n            left: `${left}%`,\n            transform: `translate(-${top}%, -${left}%)`,\n        },\n        image: {\n            backgroundImage: \"url(\" + roadracerbanner + \")\",\n            backgorundSize: \"cover\",\n            backgroundPosition: 'center',\n            backgroundRepeat: 'no-repeat',\n            width: \"100%\",\n            height: \"30%\",\n            margin: '10px'\n        },\n        promoText: {\n            width: '100%',\n            margin: '10px',\n            color: 'white',\n            fontFamily: 'Ubuntu',\n        },\n        contentText: {\n            width: '100%',\n            margin: '10px',\n            color: 'white',\n            fontFamily: 'Ubuntu',\n        },\n        linkSection: {\n            display: 'flex',\n            flexDirection: 'row',\n        },\n        linkText: {\n            width: '150px',\n            color: 'white',\n            fontFamily: 'Ubuntu',\n        },\n        closeButton: {\n            marginTop: '10px',\n            color: 'white',\n            fontFamily: 'Ubuntu',\n        }\n    }\n\n    const useStyles = makeStyles((theme) => ({\n        main: {\n            position: 'absolute',\n            width: 600,\n            height: '75%',\n            backgroundColor: 'rgb(40.9%, 38.5%, 52.3%)',\n            border: '0px solid #000',\n            boxShadow: theme.shadows[5],\n            padding: theme.spacing(2, 4, 3),\n            outline: 'none'\n        },\n        button: {\n            backgroundColor: 'rgb(29.9%, 28.2%, 37.8%)',\n            border: '0px solid #000',\n            boxShadow: theme.shadows[5],\n            padding: theme.spacing(2, 4, 3),\n            outline: 'none'\n        },\n    }));\n\n    const classes = useStyles();\n\n    return (\n        <Modal\n            open={isOpen}\n            onClose={closeModal}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n        >\n\n            <div style={styles.modal} className={classes.main}>\n\n                <div style={styles.image}></div>\n\n                <div style={styles.promoText}>\n                    Tilt to steer, swipe to jump over obstacles, buy cars to unlock Powerups and collect coins to upgrade them, collect gears for rewinds and see how far you can race!\n                </div>\n\n                <div style={styles.promoText}>\n                    <div style={styles.contentText}> - Custom C++ engine on iOS </div>\n                    <div style={styles.contentText}> - Unity 3D on Android and Windows Phone </div>\n                    <div style={styles.contentText}> - PHP and MYSQL backend to facilitate in game events and app usage insight </div>\n                    <div style={styles.contentText}> - Firebase integration </div>\n                    <div style={styles.contentText}> - Admob for interstitial ads and reward ads </div>\n                    <div style={styles.contentText}> - Game Center integration on iOS and Google Play Services integration on Android </div>\n                    <div style={styles.contentText}> - Push notification </div>\n                    <div style={styles.contentText}> - In App Purchases (consumable and non-consumable) </div>\n                    <div style={styles.contentText}> - Procedurally generated levels </div>\n                </div>\n\n                <div style={{ width: '100%' }}>\n\n                    <div style={styles.linkSection}>\n                        <span style={styles.linkText}>Apple App Store:</span> <a href='https://itunes.apple.com/us/app/road-racer/id575817068?mt=8' target=\"_blank\" rel=\"noopener noreferrer\" style={{ textDecoration: 'none' }}>Road Racer</a>\n                    </div>\n\n                    <div style={styles.linkSection}>\n                        <span style={styles.linkText}>Google Play Store:</span>  <a href='https://play.google.com/store/apps/details?id=com.intoxic8studio.roadracer' target=\"_blank\" rel=\"noopener noreferrer\" style={{ textDecoration: 'none' }}>Road Racer 168</a>\n                    </div>\n\n                    <div style={styles.linkSection}>\n                        <span style={styles.linkText}>Website:</span>  <a href='http://intoxic8studio.com/' target=\"_blank\" rel=\"noopener noreferrer\" style={{ textDecoration: 'none' }}>Intoxic8 Studio LLC</a>\n                    </div>\n\n                </div>\n\n                <Button style={styles.closeButton} className={classes.button} onClick={closeModal}>Close</Button>\n                \n            </div>\n        </Modal>\n    );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport 'fontsource-ubuntu';\nimport mightychickenbanner from '../../images/mightychickenlogo.png';\n\nexport default props => {\n    const { isOpen, closeModal } = props;\n\n    const top = 50;\n    const left = 50;\n\n    let styles = {\n        modal: {\n            display: 'flex',\n            flexDirection: 'column',\n            top: `${top}%`,\n            left: `${left}%`,\n            transform: `translate(-${top}%, -${left}%)`,\n        },\n        image: {\n            backgroundImage: \"url(\" + mightychickenbanner + \")\",\n            backgorundSize: \"cover\",\n            backgroundPosition: 'center',\n            backgroundRepeat: 'no-repeat',\n            width: \"100%\",\n            height: \"30%\",\n            margin: '10px'\n        },\n        promoText: {\n            width: '100%',\n            margin: '10px',\n            color: 'white',\n            fontFamily: 'Ubuntu',\n        },\n        contentText: {\n            width: '100%',\n            margin: '10px',\n            color: 'white',\n            fontFamily: 'Ubuntu',\n        },\n        linkSection: {\n            display: 'flex',\n            flexDirection: 'row',\n        },\n        linkText: {\n            width: '150px',\n            color: 'white',\n            fontFamily: 'Ubuntu',\n        },\n        closeButton: {\n            marginTop: '10px',\n            color: 'white',\n            fontFamily: 'Ubuntu',\n        }\n    }\n\n    const useStyles = makeStyles((theme) => ({\n        main: {\n            position: 'absolute',\n            width: 600,\n            height: '65%',\n            backgroundColor: 'rgb(100%, 54.9%, 0%)',\n            border: '0px solid #000',\n            boxShadow: theme.shadows[5],\n            padding: theme.spacing(2, 4, 3),\n            outline: 'none'\n        },\n        button: {\n            backgroundColor: 'rgb(78.8%, 43.4%, 0.2%)',\n            border: '0px solid #000',\n            boxShadow: theme.shadows[5],\n            padding: theme.spacing(2, 4, 3),\n            outline: 'none'\n        },\n\n    }));\n\n    const classes = useStyles();\n\n    return (\n        <Modal\n            open={isOpen}\n            onClose={closeModal}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\">\n\n            <div style={styles.modal} className={classes.main}>\n\n                <div style={styles.image}></div>\n\n                <div style={styles.promoText}>\n                    Dodge the mutant robo fish, killer bomb, spinning blades and poisonous arrow! Avoid getting sliced in half in the spear cave.\n                </div>\n\n                <div style={styles.promoText}>\n                    <div style={styles.contentText}> - Unity 3D on Android and iOS </div>\n                    <div style={styles.contentText}> - Firebase integration </div>\n                    <div style={styles.contentText}> - Admob and Unity Ads for interstitial ads and reward ads </div>\n                    <div style={styles.contentText}> - Game Center integration on iOS and Google Play Services integration on Android </div>\n                    <div style={styles.contentText}> - Push notification </div>\n                    <div style={styles.contentText}> - In App Purchases </div>\n                </div>\n\n                <div style={{ width: '100%' }}>\n\n                    <div style={styles.linkSection}>\n                        <span style={styles.linkText}>Apple App Store:</span> <a href='https://itunes.apple.com/us/app/mighty-chicken-and-friends/id1422459374?ls=1' target=\"_blank\" rel=\"noopener noreferrer\" style={{ textDecoration: 'none' }}>Mighty Chicken iOS</a>\n                    </div>\n\n                    <div style={styles.linkSection}>\n                        <span style={styles.linkText}>Google Play Store:</span>  <a href='https://play.google.com/store/apps/details?id=com.intoxic8studio.mightychicken' target=\"_blank\" rel=\"noopener noreferrer\" style={{ textDecoration: 'none' }}>Mighty Chicken Android</a>\n                    </div>\n\n                    <div style={styles.linkSection}>\n                        <span style={styles.linkText}>Website:</span>  <a href='http://www.themightychicken.com/' target=\"_blank\" rel=\"noopener noreferrer\" style={{ textDecoration: 'none' }}>Mighty Chicken</a>\n                    </div>\n\n                </div>\n\n                <Button style={styles.closeButton} className={classes.button} onClick={closeModal}>Close</Button>\n\n            </div>\n            \n        </Modal>\n    );\n}","import React from 'react';\nimport Input from '../engine/Input';\nimport GameEngine from '../engine/GameEngine';\nimport Scene from '../engine/Scene';\nimport Camera from '../engine/Camera';\nimport RoadRacerModal from './modal/RoadRacerModal';\nimport MightyChickenModal from './modal/MightyChickenModal';\n\nexport default class Game extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.canvas = null;\n        this.isLoaded = false;\n        this.state = {\n            currentModal: 'none'\n        }\n        window.addEventListener('resize', this.ScreenResize);\n    }\n\n    Load = () => {\n\n        if (this.isLoaded) return;\n\n        this.isLoaded = true;\n        Scene.setScreenSize(document.body.clientWidth, document.body.clientHeight );\n        Camera.Configure(60, Scene.aspectRatio, 0.1, 1000.0);\n        GameEngine.InitRenderer(this.canvas, Scene.screenWidth, Scene.screenHeight);\n        GameEngine.SetOpenModalCallback(this.openModal, this.isModalOpen);\n        this.canvas.focus();\n    }\n\n    ScreenResize = () => {\n        if (this.canvas !== null && this.canvas !== 'undefined') {\n            Scene.setScreenSize(document.body.clientWidth, document.body.clientHeight );\n            Camera.Configure(60, Scene.aspectRatio, 0.1, 1000.0);\n\n            GameEngine.GetRenderer().setSize(Scene.screenWidth, Scene.screenHeight);\n        }\n    }\n\n    gamepadConnected(e) {\n        console.log(e);\n    }\n\n    gamepadeDisconnected(e) {\n        console.log(e);\n    }\n    HandleKeyPress(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        Input.addKey(e.key);\n    }\n\n    HandleKeyUp(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        Input.removeKey(e.key);\n    }\n\n    clearInput = () => {\n        Input.clearKeys();\n    }\n\n    closeModal = () => {\n        this.setState({currentModal: 'none'});\n    }\n\n    openModal = (modal) => {\n        this.setState({currentModal: modal});\n    }\n\n    isModalOpen = () => {\n        return this.state.currentModal !== 'none';\n    }\n\n    render() {\n        return (\n            <div  style={{   width: '100vw', height:'100vh', padding:0, margin:0, overflow:'hidden' }}>\n                \n                <canvas style={{ display: 'block', width: '100vw', height: '100vh', position:'fixed'}} tabIndex=\"0\" onKeyDown={this.HandleKeyPress} onKeyUp={this.HandleKeyUp} ref={(c) => { this.canvas = c; this.Load(); }} onBlur={this.clearInput} />\n                <RoadRacerModal isOpen={this.state.currentModal === 'roadracer'} closeModal={this.closeModal}/>\n                <MightyChickenModal isOpen={this.state.currentModal === 'mightychicken'} closeModal={this.closeModal}/>\n\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport './App.css';\n\nimport Game from './components/Game';\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <Game style={{ width: '100%', height: '100%', padding: 0, margin: 0, overflow: 'hidden' }} />\n    )\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}